{"version":3,"sources":["utils/gql.js","utils/auth.js","constants/action-types.js","utils/request.js","actions/index.js","queries/index.js","PrivateComponent.js","ScrollWatch.js","Frame.js","Login.js","Register.js","FourOhFour.js","PrivateRoute.js","Home.js","Calendario.js","NuevoUsuario.js","Documentos.js","Usuarios.js","EditUsuario.js","Analitica.js","modulosConfig/ModuloRegistros.js","components/ModalInfoRegistros.js","Registro.js","Perfil.js","Grupos.js","components/ModalEditarPws.js","Passwords.js","modulosConfig/ModuloFestivos.js","Configuracion.js","reducers/index.js","reducers/usuarios.js","reducers/dias.js","reducers/es.js","reducers/documentos.js","reducers/blueCollar.js","reducers/grupos.js","reducers/pws.js","reducers/auth.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["gql","query","variables","arguments","length","undefined","baseURL","console","log","replace","split","map","elem","i","reduce","a","b","getToken","window","localStorage","getItem","JSON","parse","getHeaders","anonymous","type","jwt","headers","Accept","Content-Type","Authorization","getUserInfo","user","includes","saveAuthData","authdata","setItem","stringify","CARGAR_USUARIOS","CARGAR_CALENDARIO","CARGAR_ES","CARGAR_DOCUMENTOS","CARGAR_GRUPOS","CARGAR_PWS","CARGAR_AUTH","CAMBIAR_BLUE_COLLAR","parseJSON","response","json","checkStatus","status","then","responseFormatted","errors","forEach","e","error","Error","statusText","payload","request","url","options","Object","assign","token","concat","params","keys","k","encodeURIComponent","join","formatQueryParams","body","fetch","process","fetchUsuarios","dispatch","equipo","catch","fetchAuth","fetchCalendario","data","dias","fetchES","users","fetchDocumentos","fetchGrupos","fetchPws","PrivateComponent","Component","userInfo","blocked","this","props","blue","role","name","manager","children","Header","Layout","Footer","Sider","Content","Title","Typography","Paragraph","Frame","state","username","avatar","local","cerrarSesion","removeItem","message","info","_this","history","push","socket","on","msg","es","_this2","dia","registros","apply","u","r","aprobado","diasPorConfirmar","registrosPorConfirmar","usuariosPorConfirmar","usuarios","confirmed","setState","prevProps","prevState","_this3","isLogged","menuAvatar","react_default","createElement","menu","Item","Link","to","onClick","blueCollar","style","minHeight","display","flexDirection","key","backgroundColor","alignItems","justifyContent","color","margin","src","alt","filter","height","marginRight","dropdown","overlay","boxShadow","toUpperCase","layout","flex","theme","mode","selectedKeys","location","pathname","badge","transform","position","marginLeft","count","icon","className","href","target","rel","padding","paddingBottom","aria-label","socketConnect","connect","withRouter","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","preventDefault","form","validateFields","err","values","method","identifier","userName","password","resp","statusCode","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","userNameError","passwordError","src_Frame","card","width","maxWidth","es_form","onSubmit","validateStatus","help","rules","required","input","onChange","value","prefix","placeholder","pw","es_row","col","span","es_button","htmlType","disabled","some","field","Form","create","Register","password2","validateEmail","email","errorEmail","errorPw","errorUser","test","String","toLowerCase","emailError","password2Error","FourOhFour","typography","textAlign","PrivateRoute","_ref","component","_ref$onlyManager","onlyManager","rest","objectWithoutProperties","Route","render","Redirect","from","Home","Cache-Control","datos","meteoRaw","meteo","prediccion","d","horas","estadoCielo","periodo","defineProperty","moment","isSame","fecha","add","h","hora","find","temperatura","t","nombre","border","borderRadius","overflowX","marginBottom","fontWeight","Calendario","modalPedirDia","diasFilter","diasPorAprobar","festivos","festivosArrUTC","sel1","sel2","fetchDias","_callee","regenerator_default","wrap","_context","prev","next","organizarDias","stop","tipo","f","objectSpread","utc","hour","minute","seconds","milliseconds","format","filtrarDias","_id","primerFiltro","responderSolicitud","bool","success","getListData","dateFullCellRender","listData","valueUTC","festivo","tc","title","day","date","item","popover","content","solicitarDia","_getUserInfo","toConsumableArray","lanzarModalDia","misDias","isSameOrBefore","pedido","warning","columns","dataIndex","row","text","record","popconfirm","onConfirm","evt","tag","es_radio","Group","defaultValue","buttonStyle","Button","calendar","onSelect","src_PrivateComponent","table","dataSource","modal","visible","onCancel","footer","NuevoUsuario","solicitarAcceso","unirse","equipos","ok","crearEquipo","crear","unirseError","crearError","NuevoUsuario_Title","level","errorUnirse","errorCrear","Documentos","fileList","asociarA","selectedUser","documentos","disponibleParaTodos","misArchColumns","file","desvincularArchivo","borrarArchivo","archGlobColumns","archUserColumns","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","docId","documento","archivo","sent","_callee2","_context2","handleUpload","_callee5","promisingPromises","arrayArchivos","promesitas","_context5","_ref4","asyncToGenerator","mark","_callee3","doc","_context3","global","FormData","append","abrupt","_x4","Promise","all","mostrarListaUsuarios","_ref5","_callee4","userId","antDocus","_context4","_x5","t0","upload","Dragger","action","multiple","beforeUpload","onRemove","uid","es_checkbox","checked","collapse","bordered","activeKey","Panel","es_select","showSearch","optionFilterProp","op","filterOption","option","indexOf","Option","rowKey","marginTop","Usuarios","extraColumnsA","extraColumnsA2","extraColumnsB","cargaColumnas","twoToneColor","idcard","desasociarTarjeta","modalAsociar","usuarioAsociar","filtraUsuarios","activos","pendientes","fetchUsers","usuario","off","_this$state","onOk","EditUsuario","duracionjornada","frasesStr","frases","frasePr","frasePrAct","guardarDatos","frasePrioritaria","actFrasePrioritaria","match","id","_this4","label","TextArea","rows","Analitica","ModuloRegistros","addRegistro","idUser","fechaEntrada","fechaSalida","ePasado","sPasado","eAntesDeS","registroEntrada","registroSalida","fechaNuevoRegistro","horaEntradaNuevoRegistro","horaSalidaNuevoRegistro","clone","isBefore","ultimoEditor","cerrarModal","Select","flexWrap","date_picker","time_picker","ModalInfoRegistros","datosMod","modificado","nuevosRegistros","extraColumns","mierda","colAprobado","jornadaPendiente","entrada","month","year","sort","isAfter","guardarNuevosRegistros","n","Modal","confirm","_onOk","prom","destroyAll","accion","dato","cb","pagination","utcOffset","Registro","mes","modalVisible","modalLoading","defaultSortOrder","sorter","diff","Math","trunc","round","tiempoDescanso","diasLaborables","diasFestivos","Array","daysInMonth","fill","weekday","procesaES","diasDeEseMes","duracionJornada","jornadas","subtract","arrayCachos","ceil","j","m","duration","as","salida","comienzoDescanso","finDescanso","arrayHoras","c","slice","horasTrabajadas","horasMes","porcentajeHoras","horasPendientes","jornadasPorAprobar","isArray","handleRowClick","fila","apr","rowSelect","modalInfo","modalInfoApr","MonthPicker","DatePicker","locale","emptyText","onRow","defaultActiveKey","header","paddingRight","progress","percent","statistic","modalUser","handleNuevoRegistro","modulosConfig_ModuloRegistros","components_ModalInfoRegistros","Perfil","loading","onSuccess","onError","imgToUpload","isJPG","isLt2M","size","handleSave","uploadButton","imageUrl","listType","showUploadList","handleChange","customRequest","reset","Grupos","seleccionados","nombreNuevoGrupo","grupoEditar","addSeleccionado","esModal","Set","removeSeleccionado","s","g","sel","crearGrupo","borrarGrupo","grupo","editarGrupo","_this$state$grupoEdit","modalEdicion","Collapse","grupos","us","okText","cancelText","closable","onClose","paddingLeft","ModalEditarPws","editNombre","editCampos","","editGrupos","editUsuarios","componentDidUpdate","pwSelect","handleRepeater","txt","cual","campoEdit","prevKey","prevValue","editarEntrada","eu","eg","colon","it","v","Passwords","nuevaNombre","nuevaCampos","nuevaGrupos","nuevaUsuarios","modalPw","txtRefs","filtraPw","pws","arrayGruposPw","arrayGruposUser","auth","esGrupo","gp","esUsuario","esManager","nuevaEntrada","nu","ng","borrarEntrada","modalEditarPws","showHeader","navigator","clipboard","writeText","components_ModalEditarPws","ModuloFestivos","addFestivo","borrarFestivo","marginTOp","Configuracion","modulosConfig_ModuloFestivos","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","io","transports","App","locale_provider","es_ES","build","BrowserRouter","Switch","exact","path","PrivateRoute_PrivateRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7722d2f9.chunk.js","sourcesContent":["export default function gql(query, variables = {}, baseURL = \"\"){\n    if( query === undefined ){ console.log(\"El parámetro 'query' de la funcion gql está vacío\") }\n    const queryReplace = query\n                    .replace(/\\n/gi,   \"%0A\")\n                    .replace(/:/gi,    \"%3A\")\n                    .replace(/\\\\/gi,   \"%22\")\n                    .replace(/ {2}/gi, \"%09\")\n                    .replace(/ /gi,    \"%20\")\n                    .replace(/{/gi,    \"%7B\")\n                    .replace(/}/gi,    \"%7D\")\n                    .replace(/\\(/gi,   \"%28\")\n                    .replace(/\\)/gi,   \"%29\")\n\n    const queryUgly = queryReplace.split(\"$\").map((elem, i) => {\n        if(i%2){ //Es una variable\n            return variables[elem]\n        }\n        else{ //No es una variable\n            return elem\n        }\n    }).reduce((a, b) => a + b, \"\")\n                    \n    return baseURL + \"/graphql?query=\" + queryUgly\n}","import gql from './gql'\n\nexport function getToken(){\n    return window.localStorage.getItem('jwt') !== \"undefined\" ? JSON.parse(window.localStorage.getItem('jwt')) : undefined\n}\n\nexport function getHeaders(anonymous = false, type = \"application/json\"){\n    const jwt = getToken();\n    let headers = {\n        \"Accept\": type,\n        \"Content-Type\": type\n    }\n    if(jwt && !anonymous){ headers.Authorization = \"Bearer \" + jwt }\n    return headers\n}\n\nexport function getUserInfo(){\n    const user = window.localStorage.getItem('user')\n    const userObj = ![\"undefined\", \"\", undefined].includes(user) ? JSON.parse(window.localStorage.getItem('user')) : undefined\n    return userObj\n}\n\nexport function saveAuthData(authdata){\n    //authdata.avatar = getAvatar()\n    window.localStorage.setItem('jwt', JSON.stringify(authdata.jwt))\n    window.localStorage.setItem('user', JSON.stringify(authdata.user))\n}\n\nexport function clearData(){\n    window.localStorage.removeItem('jwt')\n    window.localStorage.removeItem('user')\n}","export const CARGAR_USUARIOS = \"CARGAR_USUARIOS\"\nexport const CARGAR_CALENDARIO = \"CARGAR_CALENDARIO\"\nexport const CARGAR_ES = \"CARGAR_ES\"\nexport const CARGAR_DOCUMENTOS = \"CARGAR_DOCUMENTOS\"\nexport const CARGAR_GRUPOS = \"CARGAR_GRUPOS\"\nexport const CARGAR_PWS = \"CARGAR_PWS\"\nexport const CARGAR_AUTH = \"CARGAR_AUTH\"\nexport const CAMBIAR_BLUE_COLLAR = \"CAMBIAR_BLUE_COLLAR\"\n","import 'whatwg-fetch';\nimport { getToken } from './auth';\n/**\n * Parses the JSON returned by a network request\n *\n * @param  {object} response A response from a network request\n *\n * @return {object}          The parsed JSON from the request\n */\nfunction parseJSON(response) {\n  return response.json ? response.json() : response;\n}\n\n/**\n * Checks if a network request came back fine, and throws an error if not\n *\n * @param  {object} response   A response from a network request\n *\n * @return {object|undefined} Returns either the response, or throws an error\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  return parseJSON(response).then(responseFormatted => {\n    if( responseFormatted.errors ){ responseFormatted.errors.forEach(e => { console.log( e ) }) }\n    const error = new Error(response.statusText);\n    error.response = response;\n    error.response.payload = responseFormatted;\n    throw error;\n  });\n}\n\n/**\n * Format query params\n *\n * @param params\n * @returns {string}\n */\nfunction formatQueryParams(params) {\n  return Object.keys(params)\n    .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n    .join('&');\n}\n\n/**\n * Requests a URL, returning a promise\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n *\n * @return {object}           The response data\n */\nexport default function request(\n  url,\n  options = {},\n  stringify = true\n) {\n  // Set headers\n  if (stringify) {\n\n    options.headers = Object.assign(\n      {\n        'Content-Type': 'application/json',\n      },\n      options.headers,\n      {}\n    );\n  }\n\n  const token = getToken();\n\n  if (token) {\n    options.headers = Object.assign(\n      {\n        Authorization: `Bearer ${token}`,\n      },\n      options.headers\n    );\n  }\n\n  if (options && options.params) {\n    const params = formatQueryParams(options.params);\n    url = `${url}?${params}`;\n  }\n\n  // Stringify body object\n  if (options && options.body && stringify) {\n    options.body = JSON.stringify(options.body);\n  }\n\n  return fetch(process.env.REACT_APP_API_URL + url, options)\n    .then(checkStatus)\n    .then(parseJSON);\n}\n","import { \n    CARGAR_USUARIOS, CARGAR_CALENDARIO, CARGAR_ES, CARGAR_DOCUMENTOS, CARGAR_GRUPOS, CARGAR_PWS, CARGAR_AUTH, CAMBIAR_BLUE_COLLAR\n} from \"../constants/action-types\"\nimport request from \"../utils/request\"\nimport gql from \"../utils/gql\"\nimport { getUserInfo } from '../utils/auth'\nimport { queryCalendario, queryES } from '../queries'\n\nexport function cambiarBlueCollar(payload) {\n    return {\n        type: CAMBIAR_BLUE_COLLAR,\n        payload\n    }\n}\n\nexport function cargarUsuarios(payload) {\n    return {\n        type: CARGAR_USUARIOS,\n        payload\n    }\n}\n  \nexport const fetchUsuarios = () => {\n    return (dispatch) => {\n        const equipo = getUserInfo() && getUserInfo().equipo\n        return request(\"/users?_limit=0&equipo=\" + equipo).then(response => {\n            dispatch(cargarUsuarios(response))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n};\n\nexport function cargarAuth(payload) {\n    return {\n        type: CARGAR_AUTH,\n        payload\n    }\n}\n  \nexport const fetchAuth = () => {\n    return (dispatch) => {\n        return request(\"/users/me\").then(response => {\n            dispatch(cargarAuth(response))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n};\n\nexport function cargarCalendario(payload) {\n    return {\n        type: CARGAR_CALENDARIO,\n        payload\n    }\n}\n  \nexport const fetchCalendario = () => {\n    return (dispatch) => {\n        return request(gql(queryCalendario(getUserInfo()))).then(response => {\n            dispatch(cargarCalendario(response.data.dias))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n};\n\nexport function cargarES(payload) {\n    return {\n        type: CARGAR_ES,\n        payload\n    }\n}\n  \nexport const fetchES = () => {\n    return (dispatch) => {\n        return request(gql(queryES(getUserInfo()))).then(response => {\n            dispatch(cargarES(response.data.equipo && response.data.equipo.users))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n};\n\nexport function cargarDocumentos(payload) {\n    return {\n        type: CARGAR_DOCUMENTOS,\n        payload\n    }\n}\n  \nexport const fetchDocumentos = () => {\n    return (dispatch) => {\n        return request(\"/documentos?_limit=0\").then(response => {\n            dispatch(cargarDocumentos(response))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n};\n\nexport function cargarGrupos(payload) {\n    return {\n        type: CARGAR_GRUPOS,\n        payload\n    }\n}\n  \nexport const fetchGrupos = () => {\n    return (dispatch) => {\n        return request(\"/grupos?_limit=0\").then(response => {\n            dispatch(cargarGrupos(response))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n};\n\nexport function cargarPws(payload) {\n    return {\n        type: CARGAR_PWS,\n        payload\n    }\n}\n  \nexport const fetchPws = () => {\n    return (dispatch) => {\n        return request(\"/pws?_limit=0\").then(response => {\n            dispatch(cargarPws(response))\n        })\n        .catch(error => {\n            throw(error);\n        });\n    };\n};","export function queryCalendario(variables){\n    return variables.equipo ? `{\n    dias(where: { equipo: \"${ variables.equipo }\" }, limit: 10000){\n        _id\n        fecha\n        tipo\n        aprobado\n        nombre\n        user{\n            _id\n            username\n            avatar{\n                url\n            }\n        }\n    }\n}` : \"{}\"\n}\n\nexport function queryES(variables){\n    return variables.equipo ? `{\n    equipo(id: \"${ variables.equipo }\"){\n        users{\n            _id\n            username\n            avatar{\n                url\n            }\n            registros{\n                _id\n                fecha\n                idcard\n                aprobado\n                user{\n                    _id\n                    username\n                }\n                ultimoEditor{\n                    _id\n                    username\n                }\n            }\n            duracionjornada\n        }\n    }\n}` : \"{}\"\n}","import { Component } from 'react';\nimport { getUserInfo } from './utils/auth';\n//import { includes as lodashIncludes } from 'lodash';\n\nclass PrivateComponent extends Component {\n\n  render() {\n    const userInfo = getUserInfo()\n    const authData = (typeof userInfo === \"object\" && userInfo !== null && userInfo.blocked === false && !this.props.blue) ? userInfo : {\n      role: {\n        name: \"Not Authorised\"\n      }\n    };\n    return authData.manager ? this.props.children : \"\";\n  }\n}\n\nexport default PrivateComponent","import React, { Component } from 'react'\n\nclass ScrollWatch extends Component{\n\n    isBottom(el) {\n        return el.getBoundingClientRect().bottom <= window.innerHeight;\n    }\n      \n    onScroll = e => {\n        console.log(e)\n        const wrappedElement = document.getElementById('header');\n        if (this.isBottom(wrappedElement)) {\n          console.log('header bottom reached');\n          document.removeEventListener('scroll', this.trackScrolling);\n        }\n    };\n\n    render(){\n        return(\n            <div onScroll={this.onScroll}>\n                { this.props.children }\n            </div>\n        )\n    }\n}\n\nexport default ScrollWatch","import React, { Component } from 'react'\nimport { Menu, Layout, Typography, Avatar, Badge, Dropdown, Icon, message, Button } from 'antd'\nimport { Link, withRouter } from 'react-router-dom'\nimport { getUserInfo, clearData, getAvatar } from './utils/auth';\nimport { socketConnect } from 'socket.io-react';\nimport { connect } from 'react-redux';\nimport { fetchES, cambiarBlueCollar, fetchCalendario, fetchUsuarios } from './actions';\nimport ScrollWatch from './ScrollWatch';\nimport PrivateComponent from './PrivateComponent';\nimport request from './utils/request';\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst { Title, Paragraph } = Typography;\n\nclass Frame extends Component{\n    state = {\n        user: {\n            username: \" \",\n            avatar: {}\n        },\n        local: false\n    }\n\n    cerrarSesion = () => {\n        clearData();\n        message.info(\"¡Vuelve pronto!\")\n        this.props.history.push(\"/login\")\n    }\n\n    async componentDidMount(){\n        const user = getUserInfo()\n        this.props.socket.on('notification', msg => {\n            if(msg.es){\n                this.props.dispatch(fetchES())\n            }\n            else if(msg.dia){\n                this.props.dispatch(fetchCalendario())\n            }\n            else if(msg.user){\n                this.props.dispatch(fetchUsuarios())\n            }\n        });\n\n        // const local = await fetch(\"http://192.168.1.65:24491/holi\")\n        // if(local.ok){ this.setState({ local: true })}\n\n        const registros = [].concat.apply([], this.props.es.map(u => u.registros)).map(r => r.aprobado)\n        const diasPorConfirmar = this.props.dias.map(u => u.aprobado).includes(null) || this.props.dias.map(u => u.aprobado).includes(false) ? true : false\n        const registrosPorConfirmar = registros.includes(false) || registros.includes(null) ? true : false\n        const usuariosPorConfirmar = this.props.usuarios.map(u => u.confirmed).includes(false) ? true : false\n\n        this.setState({ \n            user,\n            diasPorConfirmar,\n            registrosPorConfirmar,\n            usuariosPorConfirmar\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(this.props.dias !== prevProps.dias){\n            if(this.props.dias.map(u => u.aprobado).includes(null) || this.props.dias.map(u => u.aprobado).includes(false)){\n                this.setState({ diasPorConfirmar: true })\n            }\n            else{ this.setState({ diasPorConfirmar: false }) }\n        }\n        else if(this.props.es !== prevProps.es){\n            const registros = [].concat.apply([], this.props.es.map(u => u.registros)).map(r => r.aprobado)\n            if(registros.includes(false) || registros.includes(null)){\n                this.setState({ registrosPorConfirmar: true})\n            }\n            else{ this.setState({ registrosPorConfirmar: false }) }\n        }\n        else if(this.props.usuarios !== prevProps.usuarios){\n            if(this.props.usuarios.map(u => u.confirmed).includes(false)){\n                this.setState({ usuariosPorConfirmar: true })\n            }\n            else{ this.setState({ usuariosPorConfirmar: false }) }\n        }\n    }\n\n    render(){\n        const { user } = this.state\n        const { isLogged } = this.props\n        const menuAvatar = (\n            <Menu>\n                <Menu.Item>\n                    <Link to=\"/perfil\">Perfil</Link>\n                </Menu.Item>\n                <Menu.Item onClick={this.cerrarSesion}>\n                    <span>Cerrar sesión</span>\n                </Menu.Item>\n                {(user && user.manager) && \n                    <Menu.Item onClick={() => this.props.dispatch(cambiarBlueCollar(!this.props.blueCollar))}>\n                        <span>{ this.props.blueCollar ? \"Modo Manager\" : \"Modo Blue Collar\" }</span>\n                    </Menu.Item>\n                }\n            </Menu>\n        );\n\n        return (\n            <div style={{ minHeight: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\n                <Header key=\"header\" style={{ backgroundColor: \"black\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n                    <Title style={{ color: \"#f0f0f0\", margin: \"0.25em\", display: \"flex\", alignItems: \"center\" }}>\n                        <img src={process.env.REACT_APP_API_URL + \"/logo.png\"} alt=\"Blacknosaur Logo\" style={{ filter: \"invert(1)\", height: 45, marginRight: 20 }} /> Portal del Blacknosaurio\n                    </Title>\n                    { isLogged &&\n                        <Dropdown overlay={menuAvatar}>\n                            <Avatar style={{ boxShadow: this.props.blueCollar ? \"inset 0 0 4px 1px blue\" : \"none\" }} src={(user && user.avatar) && (process.env.REACT_APP_API_URL + user.avatar.url)}>{ user && user.username[0].toUpperCase() }</Avatar>\n                        </Dropdown>\n                    }\n                </Header>\n                <Layout key=\"layout\" style={{ flex: 1 }}>\n                    { isLogged &&\n                        <Sider style={{ backgroundColor: \"#191919\" }}>\n                            <Menu \n                                theme=\"dark\" \n                                style={{ backgroundColor: \"#191919\" }} \n                                mode=\"vertical-left\"\n                                selectedKeys={[window.location.pathname]}\n                            >\n                                <Menu.Item key=\"/calendario\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Link to=\"/calendario\">Calendario</Link>\n                                    {( this.state.diasPorConfirmar && (user && (user.manager && !this.props.blueCollar))) &&\n                                        <Badge style={{ transform: \"initial\", position: \"static\", marginLeft: 10 }} count={<Icon type=\"bell\" style={{ color: '#f5222d' }} />}></Badge>\n                                    }\n                                </Menu.Item>\n                                <Menu.Item key=\"/archivos\"><Link to=\"/archivos\">Documentos</Link></Menu.Item>\n                                <Menu.Item key=\"/registro\" style={{ display: \"flex\", alignItems: \"center\" }}>\n                                    <Link to=\"/registro\">Registro E/S</Link>\n                                    {( this.state.registrosPorConfirmar && (user && (user.manager && !this.props.blueCollar))) &&\n                                        <Badge style={{ transform: \"initial\", position: \"static\", marginLeft: 10 }} count={<Icon type=\"bell\" style={{ color: '#f5222d' }} />}></Badge>\n                                    }\n                                </Menu.Item>\n                                <Menu.Item key=\"/usuarios\" style={{ alignItems: \"center\" }}>\n                                    <Link to=\"/usuarios\">Usuarios</Link>\n                                    {( this.state.usuariosPorConfirmar && (user && (user.manager && !this.props.blueCollar))) &&\n                                        <Badge style={{ transform: \"initial\", position: \"static\", marginLeft: 10 }} count={<Icon type=\"bell\" style={{ color: '#f5222d' }} />}></Badge>       \n                                    }\n                                </Menu.Item>\n                                <Menu.Item key=\"/grupos\" style={{ alignItems: \"center\", display: (user && (user.manager && !this.props.blueCollar)) ? \"flex\" : \"none\"}}>\n                                    <Link to=\"/grupos\">Grupos</Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"/passwords\" style={{ alignItems: \"center\" }}>\n                                    <Link to=\"/passwords\">Contraseñas</Link>\n                                </Menu.Item>\n                                <Menu.Item key=\"/configuracion\" style={{ alignItems: \"center\", display: (user && (user.manager && !this.props.blueCollar)) ? \"flex\" : \"none\"}}>\n                                    <Link to=\"/configuracion\">Configuración</Link>\n                                </Menu.Item>\n                                {/*\n                                    this.state.local &&\n                                    <Menu.Item key=\"telefonillo\" className=\"telefonillo\" style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\"  }}>\n                                        <a href=\"http://192.168.1.65:24491\" target=\"_blank\" rel=\"noopener noreferrer\">Telefonillo </a>\n                                        <Button shape=\"circle\" onClick={() => fetch(\"http://192.168.1.65:24491/puerta\")}>\n                                            <Icon style={{ margin: 0 }} type=\"alert\" />\n                                        </Button>\n                                    </Menu.Item>          \n                                */}\n                                <Menu.Item key=\"telefonillo\" className=\"telefonillo\" style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\"  }}>\n                                    <a href=\"http://192.168.1.65:24491\" target=\"_blank\" rel=\"noopener noreferrer\">Telefonillo </a>\n                                </Menu.Item> \n                            </Menu>\n                        </Sider>\n                    }\n                    <Layout>\n                        <Content style={{ padding: \"2em\", display: \"flex\", flexDirection: \"column\" }}>\n                            <div style={{ flex: 1 }}>\n                                { this.props.children }\n                            </div>\n                            <Footer style={{paddingBottom: 0}}>\n                                <Paragraph>&reg; 2019 - Made with <span role=\"img\" aria-label=\"heart\">❤️</span>, <span role=\"img\" aria-label=\"beer\">🍺</span> and <span role=\"img\" aria-label=\"poo\">💩</span> by <a href=\"https://blacknosaur.com\" target=\"_blank\" rel=\"noopener noreferrer\">Blacknosaur</a> & <a href=\"https://www.alhill.dev\" target=\"_blank\" rel=\"noopener noreferrer\">AlHill Development</a></Paragraph>\n                            </Footer>\n                        </Content>\n                    </Layout>\n                </Layout>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        blueCollar: state.blueCollar,\n        es: state.es,\n        usuarios: state.usuarios,\n        dias: state.dias\n    }\n}\n\nexport default socketConnect(connect(mapStateToProps)(withRouter(Frame)))","import React, { Component } from 'react'\nimport Frame from './Frame'\nimport { Form, Icon, Input, Button, Layout, Card, Row, Col, message } from 'antd';\nimport { saveAuthData, getToken } from './utils/auth';\nimport { connect } from 'react-redux'\nimport { fetchCalendario, fetchUsuarios, fetchES, fetchAuth } from './actions'\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass Login extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            error: false\n        }\n    }\n    componentDidMount() {\n        // To disabled submit button at the beginning.\n        this.props.form.validateFields();\n        if(getToken()){ this.props.history.push(\"/\") }\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            //console.log('Received values of form: ', values);\n            fetch(process.env.REACT_APP_API_URL + \"/auth/local\", {\n                method: \"POST\",\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ identifier: values.userName, password: values.password })\n            }).then(resp => {\n                resp.json().then(data => {\n                    console.log(data.user)\n                    if(data.statusCode === 400){\n                        this.setState({ error: true })\n                    }\n                    else if(!data.user.confirmed){\n                        message.info(\"Tu acceso al equipo de trabajo todavía no ha sido aprobado\")\n                    }\n                    else{\n                        this.setState({ error: false })\n                        saveAuthData(data);\n                        this.props.dispatch(fetchAuth())\n                        this.props.dispatch(fetchUsuarios())\n                        this.props.dispatch(fetchCalendario())\n                        this.props.dispatch(fetchES())\n                        this.props.history.push(\"/calendario\")\n                    }\n                }).catch(err => console.log(err))\n            }).catch(err => console.log(err))\n          }\n        });\n    }       \n\n    render(){\n        const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\n        const userNameError = isFieldTouched('userName') && getFieldError('userName');\n        const passwordError = isFieldTouched('password') && getFieldError('password');\n\n        return (\n            <Layout style={{ height: \"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <Layout.Content style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Card style={{ width: 450, maxWidth: \"90%\" }}>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Item\n                                    validateStatus={( userNameError || this.state.error ) ? 'error' : ''}\n                                    help={userNameError || ''}\n                                    >\n                                    { getFieldDecorator('userName', { rules: [{ required: true, message: 'Introduce tu nombre de usuario' }] })(\n                                        <Input \n                                        onChange={e => this.setState({ user: e.target.value })}\n                                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                        placeholder=\"Nombre de usuario\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    validateStatus={( passwordError || this.state.error ) ? 'error' : ''}\n                                    help={passwordError || ''}\n                                    >\n                                    { getFieldDecorator('password', { rules: [{ required: true, message: 'Introduce tu contraseña' }] })(\n                                        <Input \n                                            onChange={e => this.setState({ pw: e.target.value })} \n                                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                            type=\"password\" \n                                            placeholder=\"Contraseña\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Row>\n                                        <Col span={12} style={{ justifyContent: \"center\", display: \"flex\" }}>\n                                            <Button type=\"primary\" onClick={() => this.props.history.push(\"/register\")}>\n                                                Registrarse\n                                            </Button>\n                                        </Col>\n                                        <Col span={12} style={{ justifyContent: \"center\", display: \"flex\" }}>\n                                            <Button\n                                                type=\"primary\"\n                                                htmlType=\"submit\"\n                                                disabled={hasErrors(getFieldsError())}\n                                                >\n                                                Acceder\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Layout.Content>\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nexport default Form.create({ name: 'login_form' })(connect()(Login))\n\n\n\n","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Layout, Card, Row, Col } from 'antd';\nimport { saveAuthData, getHeaders, getToken } from './utils/auth';\nimport Frame from './Frame';\n\nclass Register extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            errorUser: false,\n            errorEmail: false,\n            errorPw: false\n        }\n    }\n    componentDidMount() {\n        // To disabled submit button at the beginning.\n        this.props.form.validateFields();\n    }\n\n    validateEmail(email) {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n        // console.log('Received values of form: ', values);\n            if (!err) {\n                if( values.password === values.password2 ){\n                    if(this.validateEmail(values.email)){\n                        fetch(process.env.REACT_APP_API_URL + \"/auth/local/register\", {\n                            method: \"POST\",\n                            headers: getHeaders(true),\n                            body: JSON.stringify({ \n                                username: values.userName, password: values.password, email: values.email, confirmed: false \n                            })\n                        }).then(resp => {\n                            resp.json().then(data => {\n                                saveAuthData(data)\n                                this.props.history.push(\"/nuevousuario\")\n                            }).catch(err => console.log(err))\n                        }).catch(err => console.log(err))\n                    }\n                    else{\n                        this.setState({ errorEmail: true })\n                    }\n                }\n                else{\n                    this.setState({ errorPw: true })\n                }\n          }\n        });\n    }       \n\n    render(){\n        const { getFieldDecorator, getFieldError, isFieldTouched } = this.props.form;\n        const userNameError = isFieldTouched('userName') && getFieldError('userName');\n        const emailError = isFieldTouched('email') && getFieldError('email');\n        const passwordError = isFieldTouched('password') && getFieldError('password');\n        const password2Error = isFieldTouched('password2') && getFieldError('password2');\n\n        return (\n            <Layout style={{ height: \"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <Layout.Content style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Card style={{ width: 450, maxWidth: \"90%\" }}>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Form.Item\n                                    validateStatus={( userNameError || this.state.errorUser ) ? 'error' : ''}\n                                    help={userNameError || ''}\n                                    >\n                                    { getFieldDecorator('userName', { rules: [{ required: true, message: 'Introduce tu nombre de usuario' }] })(\n                                        <Input \n                                            onChange={e => this.setState({ user: e.target.value })}\n                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                            placeholder=\"Nombre de usuario\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    validateStatus={( emailError || this.state.errorEmail ) ? 'error' : ''}\n                                    help={emailError || ''}\n                                    >\n                                    { getFieldDecorator('email', { rules: [{ required: true, message: 'Introduce tu email' }] })(\n                                        <Input \n                                            onChange={e => this.setState({ email: e.target.value })}\n                                            prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                            type=\"email\"\n                                            placeholder=\"Email\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    validateStatus={( passwordError || this.state.errorPw ) ? 'error' : ''}\n                                    help={passwordError || ''}\n                                    >\n                                    { getFieldDecorator('password', { rules: [{ required: true, message: 'Introduce tu contraseña' }] })(\n                                        <Input \n                                            onChange={e => this.setState({ pw: e.target.value })} \n                                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                            type=\"password\" \n                                            placeholder=\"Contraseña\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    validateStatus={( password2Error || this.state.errorPw ) ? 'error' : ''}\n                                    help={password2Error || ''}\n                                    >\n                                    { getFieldDecorator('password2', { rules: [{ required: true, message: 'Repite la contraseña' }] })(\n                                        <Input \n                                            onChange={e => this.setState({ pw: e.target.value })} \n                                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                            type=\"password\" \n                                            placeholder=\"Repetir contraseña\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Row>\n                                        <Col style={{ justifyContent: \"center\", display: \"flex\" }}>\n                                            <Button type=\"primary\" onClick={this.handleSubmit}>\n                                                Registrarse\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Layout.Content>\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nexport default Form.create({ name: 'register_form' })(Register)\n\n\n\n","import React from 'react'\nimport Frame from './Frame'\nimport { Typography, Layout, Card } from 'antd'\nimport { getToken } from './utils/auth'\n\nconst FourOhFour = () => (\n    <Layout style={{ height: \"100vh\"}}>\n        <Frame isLogged={ getToken() ? true : false }>\n            <Layout.Content style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                <Card style={{ width: 450, maxWidth: \"90%\" }}>\n                    <Typography.Title style={{ margin: 0, textAlign: \"center\" }}>404!</Typography.Title>\n                </Card>\n            </Layout.Content>\n        </Frame>\n    </Layout>\n)\n\nexport default FourOhFour","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getUserInfo } from './utils/auth';\n\nexport const PrivateRoute = ({ component: Component, onlyManager = false, ...rest }) => {\n    const userInfo = getUserInfo();\n    return(\n        <Route\n            {...rest}\n            render={props => \n                userInfo && (!onlyManager || ( onlyManager && userInfo.manager )) ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: props.location }\n                        }}\n                    />\n                )\n            }\n        />\n    )\n}","import React, { Component } from 'react'\nimport { getToken, getUserInfo } from './utils/auth';\nimport { Layout } from 'antd'\nimport moment from 'moment'\nimport Frame from './Frame';\n\n\nclass Home extends Component{\n\n    state = {}\n\n    componentDidMount(){\n        fetch(\"https://opendata.aemet.es/opendata/api/prediccion/especifica/municipio/horaria/28079/?api_key=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbHZhcm9naWxAYmxhY2tub3NhdXIuY29tIiwianRpIjoiNTQwNjQ0NzEtMzhiMC00MTRiLWE3MDktMGYxYTVmY2JkOGUyIiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE1NjAyNTcyNTMsInVzZXJJZCI6IjU0MDY0NDcxLTM4YjAtNDE0Yi1hNzA5LTBmMWE1ZmNiZDhlMiIsInJvbGUiOiIifQ.ihZx3I_3987zhxRmM8oA8_-hSI9OTakxR6e-WmU5fjs\", {\n            headers:{ \"Cache-Control\": \"no-cache\" }\n        }).then(resp => {\n            resp.json().then(data => {\n                fetch(data.datos).then(resp => {\n                    resp.json().then(meteoRaw => {\n                        const meteo = meteoRaw[0].prediccion.dia.map(d => {\n                            const horas = d.estadoCielo.map(e => e.periodo)\n                            return ({ [moment().isSame(d.fecha, \"day\") ? \"Hoy\" : (moment().add(1, \"day\").isSame(d.fecha, \"day\") ? \"Mañana\" : \"borrar\")]: horas.map(h => ({  \n                                hora: h,\n                                estadoCielo: d.estadoCielo.find(e => e.periodo === h).value,\n                                temperatura: d.temperatura.find(t => t.periodo === h).value\n                            }))})\n                        }).filter(dia => Object.keys(dia)[0] !== \"borrar\")\n\n                        console.log(meteo)\n                        this.setState({ meteo })\n                    })\n                })\n            }).catch(err => { console.log(err) })\n        }).catch(err => { console.log(err) })\n    }\n\n    render(){\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>Hola, { getUserInfo().nombre }</h1>\n                    <br />\n                    {\n                        this.state.meteo && this.state.meteo.map((d, i) => {\n                            return <div key={\"d\" + i}>\n                                <h3>{ Object.keys(d)[0] }</h3>\n                                <div style={{\n                                    display: \"inline-flex\",\n                                    border: \"1px solid gainsboro\",\n                                    borderRadius: 3,\n                                    boxShadow: \"rgba(0, 0, 0, 0.1) 1px 1px 5px 0px\",\n                                    overflowX: \"auto\",\n                                    marginBottom: \"1em\"\n                                }}>\n                                    {\n                                        Object.values(d)[0].map(r => (\n                                            <div style={{\n                                                display: \"flex\",\n                                                flex: 1,\n                                                flexDirection: \"column\"\n                                            }}>\n                                                <div style={{\n                                                    backgroundColor: \"#333\",\n                                                    color: \"white\",\n                                                    padding: 5,\n                                                    textAlign: \"center\"\n                                                }}>{r.hora}:00</div>\n                                                <div style={{\n                                                    padding: 5,\n                                                    textAlign: \"center\",\n                                                    fontWeight: \"bold\",\n                                                    color: r.temperatura <= 15 ? \"#2222cc\" : (r.temperatura >= 28 ? \"#cc0000\" : \"#333\")\n                                                }}>{r.temperatura}º</div>\n                                                <div style={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"center\",\n                                                    alignItems: \"center\"\n                                                }}><img src={`${process.env.PUBLIC_URL}/meteo/${r.estadoCielo}.png`} /></div>\n                                            </div>\n                                        ))\n                                    }\n                                </div>\n                            </div>\n                        })\n                    }\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Layout, Typography, Calendar, Modal, message, Avatar, Button, Popover, Radio, Row, Table, Popconfirm, Tag } from 'antd'\nimport moment from 'moment';\nimport { getHeaders, getUserInfo, getToken } from './utils/auth';\nimport request from './utils/request';\nimport Frame from './Frame';\nimport PrivateComponent from './PrivateComponent';\nimport { connect } from 'react-redux'\nimport { fetchCalendario } from './actions';\n\nconst query = getUserInfo() ? `{\n    dias(where: { equipo: \"${getUserInfo().equipo }\" }){\n        _id\n        fecha\n        tipo\n        aprobado\n        user{\n            _id\n            username\n            avatar{\n                url\n            }\n        }\n    }\n}` : \"{}\"\n\nclass Calendario extends Component{\n    state = {\n        modalPedirDia: false,\n        dias: [],\n        diasFilter: [],\n        diasPorAprobar: [],\n        festivos: [],\n        festivosArrUTC: [],\n        sel1: \"libres\",\n        sel2: \"global\"\n    }\n\n    componentDidMount(){\n        \n        const columns = [{\n            title: 'Nombre de usuario',\n            key: 'user',\n            render: r => r.user && r.user.username\n        }, {\n            title: 'Tipo',\n            dataIndex: 'tipo',\n            key: 'tipo'\n        }, {\n            title: 'Fecha',\n            key: 'fecha',\n            render: row => moment(row.fecha).format(\"YYYY-MM-DD\")\n        }, {\n            title: 'Acción',\n            key: 'action',\n            render: (text, record) => (\n              <span>\n                <Popconfirm title={`¿Estás seguro de que deseas aceptar la solicitud de día ${record.tipo} para el día ${moment(record.fecha).format(\"YYYY-MM-DD\")} a ${record.user && record.user.username}?`} onConfirm={evt => this.responderSolicitud(record, true)}>\n                    <Tag color=\"green\" key={`${record._id}_aceptar`}>Aprobar</Tag>\n                </Popconfirm>\n                <Popconfirm title={`¿Estás seguro de que deseas denegar la solicitud de día ${record.tipo} para el día ${moment(record.fecha).format(\"YYYY-MM-DD\")} a ${record.user && record.user.username}?`} onConfirm={evt => this.responderSolicitud(record, false)}>\n                    <Tag color=\"volcano\" key={`${record._id}_denegar`}>Denegar</Tag>\n                </Popconfirm>\n              </span>\n            ),\n        }]\n        this.setState({ columns })\n        if(this.props.dias){\n            this.organizarDias()\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.sel1 !== this.state.sel1 || prevState.sel2 !== this.state.sel2){\n            this.setState({ diasFilter: this.filtrarDias(this.state.dias) })\n        }\n        else if(prevProps.dias !== this.props.dias){\n            this.organizarDias()\n        }\n    }\n\n    fetchDias = async () => {         \n        await this.props.dispatch(fetchCalendario())\n        this.organizarDias()\n    }\n\n    organizarDias = () => {\n        const { dias } = this.props\n        const festivos = this.props.dias.filter(d => d.tipo === \"festivo\").map(f => ({\n            ...f,\n            fecha: moment.utc(f.fecha).hour(0).minute(0).seconds(0).milliseconds(0).format()\n        }))\n        const festivosArrUTC = festivos.map(f => moment.utc(f.fecha).hour(2).minute(0).seconds(0).milliseconds(0).format())\n        this.setState({ \n            dias, \n            festivos,\n            festivosArrUTC,\n            diasFilter: this.filtrarDias(dias), \n            diasPorAprobar:dias.filter(d => !d.aprobado).map(d => ({...d, key: d._id})) \n        })\n    }\n   \n    filtrarDias = (dias) => {\n        const primerFiltro = this.state.sel1 === \"libres\" ?\n        dias.filter(d => d.tipo === \"libre\") :\n        dias.filter(d => d.tipo === \"remoto\")\n\n        const diasFilter = this.state.sel2 === \"aprobados\" ?  primerFiltro.filter(d => ( d.aprobado && d.user._id === getUserInfo()._id )) : (\n                           this.state.sel2 === \"pendientes\" ? primerFiltro.filter(d => ( !d.aprobado && d.user._id === getUserInfo()._id )) :\n                                                              primerFiltro.filter(d => d.aprobado))\n                                                              \n        return diasFilter\n    }\n\n    responderSolicitud = (dia, bool) => {\n        if(bool){ //Aceptar\n            request(\"/dias/\" + dia._id, {\n                method: \"PUT\",\n                body: { aprobado: true }\n            }).then(resp => {\n                message.success(`Se ha aprobado la solicitud de ${dia.user.username} de día ${dia.tipo} el día ${moment(dia.fecha).format(\"YYYY-MM-DD\")}`)\n                this.fetchDias()\n            }).catch(err => {\n                console.error(err)\n                message.error(`Se ha producido un error durante la aprobación del día ${dia.tipo} solicitado`)                    \n            })\n        }\n        else{ //Denegar\n            request(\"/dias/\" + dia._id, {\n                method: \"DELETE\",\n            }).then(resp => {\n                message.info(\"Se ha denegado la solicitud de día \" + dia.tipo)\n                this.fetchDias()    \n            }).catch(err => {\n                message.error(`Se ha producido un error durante la denegación del día ${dia.tipo} solicitado`)       \n                console.error(err)\n            })\n        }\n    }\n\n    getListData = value => {\n        const listData = this.state.diasFilter\n            .filter(d => moment(d.fecha).format(\"YYYYMMDD\") === moment(value).format(\"YYYYMMDD\"))\n            .map(d => ({\n                user: d.user.username,\n                fecha: moment(d.fecha),\n                avatar: d.user.avatar && (process.env.REACT_APP_API_URL + d.user.avatar.url)\n            }))\n        return listData || [];\n    }\n\n    dateFullCellRender = value => {\n\n        console.log(value)\n        const listData = this.getListData(value);\n        const valueUTC = moment.utc(value.hour(2).minute(0).seconds(0).milliseconds(0)).format()\n        \n        const festivo = this.state.festivos.find(f => { return moment.utc(f.fecha).format() === valueUTC })\n\n        const tc = {\n            title: festivo ? festivo.nombre : value.format(\"LL\"),\n            color: festivo ? \"rgba(255, 40, 30, 0.5)\" : ( [0, 6].includes(value.day()) ? \"rgba(255, 200, 100, 0.5)\" : \"transparent\" )\n        }\n\n        return (\n            <div className=\"ant-fullcalendar-date\" style={{ backgroundColor: tc.color, margin: \"-1px 0\", borderRadius: 3 }} title={tc.title}>\n                <div className=\"ant-fullcalendar-value\">{ value.date() }</div>\n                <div className=\"ant-fullcalendar-content\">\n                    <ul className=\"events\">\n                    {\n                        listData.map(item => (\n                            <Popover key={item.user + item.fecha} content={<span>{item.user}</span>}>\n                                <Avatar src={item.avatar ? item.avatar : null}>{ item.user[0].toUpperCase() }</Avatar>\n                            </Popover>\n                        ))\n                    }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n    solicitarDia = (fecha, tipo) => {\n        const { _id, equipo } = getUserInfo()\n        console.log(getUserInfo())\n        console.log(tipo)\n        fetch(process.env.REACT_APP_API_URL + \"/dias\", {\n            method: \"POST\",\n            headers: getHeaders(),\n            body: JSON.stringify({\n                fecha, tipo, user: _id, equipo\n            })\n        }).then(resp => {\n            resp.json().then(dia => {\n                console.log(dia)\n                message.info(`Has solicitado como día ${tipo} el ${moment(this.state.dia).format(\"DD/MM/YYYY\")}. Tu solicitud está pendiente de aprobación`); \n                this.fetchDias()\n                this.setState({ modalPedirDia: false, dias: [...this.state.dias, dia] })\n            }).catch(err => console.log(err))\n        }).catch(err => console.log(err))\n    }\n\n    lanzarModalDia = dia => {\n        const misDias = this.state.dias.filter(d => d.user && (d.user._id === getUserInfo()._id ))\n        if( moment().isSameOrBefore(dia, \"day\") ){\n            if( this.state.festivos.find(f => moment(f.fecha).isSame(dia, \"day\")) === undefined ){\n                const pedido = misDias.find(d => moment(d.fecha).isSame(dia, \"day\"))\n                if(!pedido){\n                    this.setState({\n                        dia,\n                        modalPedirDia: true\n                    })\n                }\n                else{ \n                    if(!pedido.aprobado){\n                        message.warning(\"La solicitud de ese día todavía se encuentra pendiente de aprobación\") \n                    }\n                }\n            }\n            else{ message.warning(\"No puedes solicitar un día festivo\") }\n        }\n        else{ message.warning(\"No puedes solicitar un día pasado\") }\n    }\n\n    render(){\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <Row style={{ justifyContent: \"space-around\", display: \"flex\"}}>\n                        <Radio.Group defaultValue={this.state.sel1} buttonStyle=\"solid\">\n                            <Radio.Button onClick={() => this.setState({ sel1: \"libres\" }) } value=\"libres\">Libres</Radio.Button>\n                            <Radio.Button onClick={() => this.setState({ sel1: \"remotos\" }) } value=\"remotos\">Remotos</Radio.Button>\n                        </Radio.Group>\n                        <Radio.Group defaultValue={this.state.sel2} buttonStyle=\"solid\">\n                            <Radio.Button onClick={() => this.setState({ sel2: \"global\" }) } value=\"global\">Global aprobados</Radio.Button>\n                            <Radio.Button onClick={() => this.setState({ sel2: \"aprobados\" }) } value=\"aprobados\">Mis días aprobados</Radio.Button>\n                            <Radio.Button onClick={() => this.setState({ sel2: \"pendientes\" }) } value=\"pendientes\">Mis días pendientes de aprobación</Radio.Button>\n                        </Radio.Group>\n                    </Row>\n                    <Calendar\n                        onSelect={evt => this.lanzarModalDia(evt)} \n                        dateFullCellRender={this.dateFullCellRender}\n                        style={{ margin: \"-1px 0\"}}\n                    />\n                    <PrivateComponent blue={this.props.blueCollar}>\n                        <h1>Días pendientes de revisión</h1>\n                        <Table dataSource={this.state.diasPorAprobar} columns={this.state.columns || []} />\n                    </PrivateComponent>\n                </Frame>\n                <Modal\n                    visible={this.state.modalPedirDia}\n                    onCancel={() => this.setState({ modalPedirDia: false })}\n                    footer={[\n                        <Button key=\"libre\" onClick={() => this.solicitarDia( this.state.dia, \"libre\")}>Día libre</Button>,\n                        <Button key=\"remoto\" type=\"primary\" onClick={() => this.solicitarDia( this.state.dia, \"remoto\")}>Día remoto</Button>\n                      ]}\n                >\n                    <p>Solicitar el día { moment(this.state.dia).format(\"DD/MM/YYYY\") } como... </p>\n                </Modal>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dias: state.dias,\n        blueCollar: state.blueCollar\n    }\n}\n\nexport default connect(mapStateToProps)(Calendario)","import React, { Component } from 'react'\nimport { Form, Icon, Input, Button, Layout, Card, Row, Col, message } from 'antd';\nimport { getHeaders, getUserInfo, getToken } from './utils/auth';\nimport { Typography } from 'antd';\nimport gql from './utils/gql';\nimport Frame from './Frame';\n\nconst { Title } = Typography;\n\nconst query = `{\n    equipos(where: {nombre: \"$nombre$\"}){\n        _id\n    }\n}`\nclass NuevoUsuario extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            errorUser: false,\n            errorEmail: false,\n            errorPw: false\n        }\n    }\n    // componentDidMount() {\n    //     // To disabled submit button at the beginning.\n    //     this.props.form.validateFields();\n    // }\n    \n    solicitarAcceso = e => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            fetch(process.env.REACT_APP_API_URL + gql(query, { nombre: values.unirse }), { headers: getHeaders() })\n                .then(response => {\n                    console.log(response)\n                    response.json().then(data => {\n                        console.log(data)\n                        if(data.data.equipos[0]){\n                            fetch(process.env.REACT_APP_API_URL + \"/users/\" + getUserInfo()._id, {\n                                method: \"PUT\",\n                                headers: getHeaders(),\n                                body: JSON.stringify({\n                                    equipo: data.data.equipos[0]._id,\n                                    confirmed: false\n                                })\n                            }).then(data => {\n                                console.log(data)\n                                if(data.ok){\n                                    message.info(`Se ha solicitado con éxito el acceso al equipo \"${values.unirse}\"`)\n                                }\n                            })\n                        }\n                        else{\n                            message.error(`No se ha encontrado ningún equipo \"${values.unirse}\"`); \n                        }\n                    }).catch(err => console.log(err))\n                }).catch(err => console.log(err))\n        })\n    }\n\n    crearEquipo = e => {\n        e.preventDefault()\n        this.props.form.validateFields((err, values) => {\n            fetch(process.env.REACT_APP_API_URL + \"/equipos\", {\n                method: \"POST\",\n                headers: getHeaders(),\n                body: JSON.stringify({\n                    nombre: values.crear,\n                    users: [getUserInfo()._id]\n                })\n            }).then(response => {\n                response.json().then(data => {\n                    fetch(process.env.REACT_APP_API_URL + \"/users/\" + getUserInfo()._id, {\n                        method: \"PUT\",\n                        headers: getHeaders(),\n                        body: JSON.stringify({\n                            confirmed: true,\n                            manager: true\n                        })\n                    }).then(() => {\n                        this.props.history.push(\"/\")\n                    })\n                }).catch(err => { console.log(err); message.error(\"Se ha producido un error al asignar el usuario al equipo recien creado\") })\n            }).catch(err => { console.log(err); message.error(\"Se ha producido un error al crear el equipo\") })\n        })\n    }   \n\n    render(){\n        const { getFieldDecorator, getFieldError, isFieldTouched } = this.props.form;\n        const unirseError = isFieldTouched('unirse') && getFieldError('unirse');\n        const crearError = isFieldTouched('crear') && getFieldError('crear');\n\n        return (\n            <Layout style={{ height: \"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <Layout.Content style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Card style={{ width: 450, maxWidth: \"90%\", marginBottom: \"1em\" }}>\n                                <Title level={2}>Unirse a un equipo</Title>\n                                <Form.Item\n                                    validateStatus={( unirseError || this.state.errorUnirse ) ? 'error' : ''}\n                                    help={unirseError || ''}\n                                    >\n                                    { getFieldDecorator('unirse', { rules: [{ required: true, message: 'Introduce el nombre del equipo' }] })(\n                                        <Input \n                                            onChange={e => this.setState({ pw: e.target.value })} \n                                            prefix={<Icon type=\"team\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                            type=\"text\" \n                                            placeholder=\"Nombre del equipo al que te quieres unir\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Row>\n                                        <Col style={{ justifyContent: \"center\", display: \"flex\" }}>\n                                            <Button type=\"primary\" onClick={this.solicitarAcceso}>\n                                                Solicitar acceso\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n                            </Card>\n                            <Card style={{ width: 450, maxWidth: \"90%\" }}>\n                                <Title level={2}>Crear un equipo</Title>\n                                <Form.Item\n                                    validateStatus={( crearError || this.state.errorCrear ) ? 'error' : ''}\n                                    help={crearError || ''}\n                                    >\n                                    { getFieldDecorator('crear', { rules: [{ required: true, message: 'Introduce el nombre del equipo' }] })(\n                                        <Input \n                                            onChange={e => this.setState({ pw: e.target.value })} \n                                            prefix={<Icon type=\"usergroup-add\" style={{ color: 'rgba(0,0,0,.25)' }} />} \n                                            type=\"password\" \n                                            placeholder=\"Nombre del equipo a crear\" \n                                        />\n                                    )}\n                                </Form.Item>\n                                <Form.Item>\n                                    <Row>\n                                        <Col style={{ justifyContent: \"center\", display: \"flex\" }}>\n                                            <Button type=\"primary\" onClick={this.crearEquipo}>\n                                                Crear equipo\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form.Item>\n                            </Card>\n                        </Form>\n                    </Layout.Content>\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nexport default Form.create({ name: 'nuevousuario_form' })(NuevoUsuario)\n\n\n\n","import React, { Component } from 'react'\nimport { Layout, Upload, Icon, message, Table, Button, Select, Tag, Popconfirm, Checkbox, Collapse } from 'antd'\nimport Frame from './Frame';\nimport { getUserInfo, getToken } from './utils/auth';\nimport gql from './utils/gql';\nimport { connect } from 'react-redux'\nimport { fetchDocumentos } from './actions'\nimport request from './utils/request';\n\nconst query = `{\nuser(id:\"$userId$\"){\n    documentos{\n        _id\n    }\n}}`  \n\nclass Documentos extends Component{\n\n    state = {\n        fileList: [],\n        asociarA: [],\n        userInfo: getUserInfo(),\n        selectedUser: {documentos: []},\n        disponibleParaTodos: true,\n        columns: [{\n            title: 'Nombre de usuario',\n            dataIndex: 'username',\n            key: 'username',\n        }, {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        }],\n        misArchColumns: [{\n            title: 'Nombre de archivo',\n            dataIndex: 'name',\n            key: 'name',\n        }, {\n            key: \"archivo\",\n            render: file => (\n                <div key={file._id} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <a href={process.env.REACT_APP_API_URL + file.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Tag color=\"geekblue\" key={`${file._id}_file`}><Icon type=\"file-text\" /> Enlace</Tag>\n                    </a>\n                    <Popconfirm \n                        title={`¿Estás seguro de que deseas desvincular ${file.name} de ${this.state.selectedUser.username}?`} \n                        onConfirm={() => this.desvincularArchivo(file, this.state.selectedUser)}>\n                        <Tag color=\"orange\" key={`${file._id}_file`}><Icon type=\"disconnect\" /> Desvincular</Tag>\n                    </Popconfirm>\n                    <Popconfirm \n                        title={`¿Estás seguro de que deseas borrar ${file.name}? Esto borrará el archivo para todos los usuarios`} \n                        onConfirm={() => this.borrarArchivo(file)}\n                        icon={<Icon type=\"warning\" style={{ color: 'red' }} />}\n                    >\n                        <Tag color=\"volcano\" key={`${file._id}_file`}><Icon type=\"delete\" /> Borrar</Tag>\n                    </Popconfirm>\n                </div>\n            )\n        }],\n        archGlobColumns: [{\n            title: 'Nombre de archivo',\n            dataIndex: 'name',\n            key: 'name',\n        }, {\n            key: \"archivo\",\n            render: file => (\n                <div key={file._id} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <a href={process.env.REACT_APP_API_URL + file.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Tag color=\"geekblue\" key={`${file._id}_file`}><Icon type=\"file-text\" /> Enlace</Tag>\n                    </a>\n                    <Popconfirm \n                        title={`¿Estás seguro de que deseas borrar ${file.name}? Esto borrará el archivo para todos los usuarios`} \n                        onConfirm={() => this.borrarArchivo(file)}\n                        icon={<Icon type=\"warning\" style={{ color: 'red' }} />}\n                    >\n                        <Tag color=\"volcano\" key={`${file._id}_file`}><Icon type=\"delete\" /> Borrar</Tag>\n                    </Popconfirm>\n                </div>\n            )\n        }],\n        archUserColumns: [{\n            title: 'Nombre de archivo',\n            dataIndex: 'name',\n            key: 'name',\n        }, {\n            key: \"archivo\",\n            render: file => (\n                <div key={file._id} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    <a href={process.env.REACT_APP_API_URL + file.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <Tag color=\"geekblue\" key={`${file._id}_file`}><Icon type=\"file-text\" /> Enlace</Tag>\n                    </a>\n                </div>\n            )\n        }]\n    }\n\n    componentDidMount(){\n        this.setState({ selectedUser: this.props.usuarios.find(u => u.username === getUserInfo().username) })\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.usuarios !== this.props.usuarios){\n            this.setState({ selectedUser: this.props.usuarios.find(u => u.username === getUserInfo().username) })\n        }\n    }\n\n    rowSelection = {\n        onChange: (selectedRowKeys, selectedRows) => {\n            this.setState({ asociarA: selectedRows.map(u => u._id) })\n        },\n        getCheckboxProps: record => ({\n            disabled: record.name === 'Disabled User', // Column configuration not to be checked\n            name: record.name,\n        }),\n    };\n\n    desvincularArchivo = async (file, user) => {\n        const docId = this.state.selectedUser.documentos.find(d => d.archivo._id === file._id)._id\n        const documento = await request(\"/documentos/\" + docId)\n        const users = documento.users.filter(u => u._id !== user._id)\n        request(\"/documentos/\" + docId, {\n            method: \"PUT\",\n            body: { users }\n        }).then(data => {\n            message.info(\"El archivo se desvinculó correctamente\")\n            this.props.dispatch(fetchDocumentos())\n        }).catch(err => {\n            console.log(err)\n            message.error(\"Se produjo un error durante la desvinculación del documento\")\n        })\n    }\n\n    borrarArchivo = async file => {\n        const docId = this.props.documentos.find(d => d.archivo._id === file._id)._id\n        request(\"/upload/files/\" + file._id, {\n            method: \"DELETE\"\n        }).then(data => {\n            request(\"/documentos/\" + docId, {\n                method: \"DELETE\"\n            }).then(data => {\n                message.info(\"El archivo se borró correctamente\")\n                this.props.dispatch(fetchDocumentos())\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Se produjo un error durante el borrado del documento\")\n            })\n        })\n          .catch(err => {\n            console.log(err)\n            message.error(\"Se produjo un error durante el borrado del documento\")\n        })\n    }\n\n    handleUpload = async () => {\n        try{\n            const promisingPromises = this.state.fileList.map(async file => {\n                console.log()\n                const doc = await request(\"/documentos\", { method: \"POST\", body: { global: this.state.disponibleParaTodos } })\n                const body = new FormData();\n                body.append(\"ref\", \"documento\");\n                body.append(\"refId\", doc._id);\n                body.append(\"field\", \"archivo\");\n                body.append(\"files\", file);\n                request(\"/upload\", {\n                    method: \"POST\",\n                    headers: {\"Authorization\": \"Bearer \" + getToken()},\n                    body\n                }, false)\n                return doc._id\n            })\n            const arrayArchivos = await Promise.all(promisingPromises)\n            console.log(arrayArchivos)\n            if(this.state.asociarA.length === 0 && !this.state.disponibleParaTodos){\n                message.error(\"El documento no está asociado a ningún usuario\")\n            }\n            else if(!this.state.disponibleParaTodos){\n                const promesitas = this.state.asociarA.map(async userId => {\n                    const antDocus = (await request(gql(query, { userId }))).data.user.documentos\n                    return request(\"/users/\" + userId, {\n                        method: \"PUT\",\n                        body: {\n                            documentos: [...antDocus, ...arrayArchivos]\n                        }\n                    })\n                })\n                Promise.all(promesitas).then(() => {\n                    message.info(\"Los documentos se han subido correctamente\")\n                    this.props.dispatch(fetchDocumentos())\n                    this.setState({\n                        mostrarListaUsuarios: false,\n                        fileList: []\n                    })\n                })\n            }\n            else{\n                message.info(\"Los documentos se han subido correctamente\")\n                this.props.dispatch(fetchDocumentos())\n                this.setState({\n                    mostrarListaUsuarios: false,\n                    fileList: []\n                })\n            }\n        }\n        catch(err){\n            console.log(err)\n            message.error(\"Ocurrió un error durante la subida de documentos\")\n        }\n    }\n\n    render(){\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>Documentos</h1>\n                    {(this.state.userInfo.manager && !this.props.blueCollar ) && [ \n                        <div key=\"sa\" style={{ marginBottom: 50 }}>\n                            <h2>Subir archivo</h2>\n                            <div style={{ width: \"320px\", marginBottom: 20 }}>\n                                <Upload.Dragger \n                                    name='file'\n                                    action={ process.env.REACT_APP_API_URL + '/upload' }\n                                    multiple={true}\n                                    onChange={(info) => {\n                                        const status = info.file.status;\n                                        if (status !== 'uploading') {\n                                            //console.log(info.file, info.fileList);\n                                            if(info.fileList.length === 0){\n                                                this.setState({ mostrarListaUsuarios: false })\n                                            }\n                                        }\n                                        if (status === 'done') {\n                                            message.success(`${info.file.name} se ha subido correctamente.`);\n                                        } else if (status === 'error') {\n                                            message.error(`La subida de ${info.file.name} falló.`);\n                                        }\n                                    }} \n                                    beforeUpload={(file, fileList) => {\n                                        this.setState({ \n                                            fileList,\n                                            mostrarListaUsuarios: true \n                                        })\n                                        return false\n                                    }}\n                                    fileList={this.state.fileList}\n                                    onRemove={file => {\n                                        const fileList = this.state.fileList.filter(f => f.uid !== file.uid)\n                                        this.setState({ fileList, mostrarListaUsuarios: fileList.length > 0 ? true : false })\n                                    }}\n                                >\n                                    <Icon type=\"inbox\" />\n                                    <p>Arrastra documentos aquí</p>\n                                </Upload.Dragger>\n                            </div>\n                            { this.state.mostrarListaUsuarios &&\n                                <div style={{ display: \"flex\", flexDirection: \"column\"}}>\n                                    <Checkbox style={{ marginBottom: 20 }} checked={this.state.disponibleParaTodos} onChange={e => this.setState({ disponibleParaTodos: e.target.checked })}>Disponible para todos los usuarios</Checkbox>\n                                    <Collapse className=\"sinCabecera\" bordered={false} activeKey={ this.state.disponibleParaTodos ? \"0\" : \"1\"}>\n                                        <Collapse.Panel key=\"1\">\n                                            <h3 key=\"asociarTitle\">Asociar archivo a:</h3>\n                                            <Table key=\"asociarTabla\" rowSelection={this.rowSelection} dataSource={this.props.usuarios} columns={this.state.columns} />\n                                        </Collapse.Panel>\n                                    </Collapse>\n                                    <div>\n                                        <Button onClick={this.handleUpload}>Subir documentos</Button>\n                                    </div>\n                                </div>\n                            }\n                        </div>,\n                        <div key=\"apu\">\n                            <h2>Archivos por usuario</h2>\n                            <Select\n                                showSearch\n                                style={{ width: 200, marginBottom: 20 }}\n                                placeholder=\"Selecciona un usuario\"\n                                defaultValue={getUserInfo().username}\n                                optionFilterProp=\"children\"\n                                onChange={op => {\n                                    const selectedUser = this.props.usuarios.find(u => u.username === op)\n                                    this.setState({ selectedUser })\n\n                                }}\n                                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                            >\n                                { this.props.usuarios.map(u => \n                                    <Select.Option value={u.username} key={u._id}>{u.username}</Select.Option>\n                                )}\n                            </Select>\n                            {\n                                this.state.selectedUser && \n                                    <Table \n                                        // dataSource={this.state.selectedUser.documentos.map(d => d.archivo)} \n                                        dataSource={this.props.documentos.filter(d => d.users.map(u => u._id).includes(this.state.selectedUser._id)).map(d => d.archivo)} \n                                        columns={this.state.misArchColumns}\n                                        rowKey=\"_id\"\n                                    ></Table>\n                            }\n\n                            <h2 style={{ marginTop: 20 }}>Archivos globales</h2>\n                            <Table \n                                dataSource={this.props.documentos.filter(d => d.global).map(d => d.archivo)} \n                                columns={this.state.archGlobColumns}\n                                rowKey=\"_id\"\n                            ></Table>\n                        </div>\n                    ]}\n                    { (!this.state.userInfo.manager || this.props.blueCollar ) &&\n                        <div>\n                            <h2>Mis archivos</h2>\n                            <Table \n                                dataSource={this.props.documentos.filter(d => this.state.userInfo.documentos.includes(d._id) || d.global).map(d => d.archivo)} \n                                columns={this.state.archUserColumns}\n                                rowKey=\"_id\"\n                            ></Table>\n                        </div>\n                    }\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        usuarios: state.usuarios,\n        documentos: state.documentos,\n        blueCollar: state.blueCollar\n    }\n}\n\nexport default connect(mapStateToProps)(Documentos)","import React, { Component } from 'react'\nimport { Layout, Table, Tag, Popconfirm, message, Icon, Button, Modal } from 'antd'\nimport Frame from './Frame';\nimport { socketConnect } from 'socket.io-react';\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { fetchUsuarios } from './actions'\nimport request from './utils/request';\nimport { getToken, getUserInfo } from './utils/auth';\n\n\nclass Usuarios extends Component{\n\n    state = {\n        columns: [],\n        extraColumnsA: [],\n        extraColumnsA2: [],\n        extraColumnsB: []\n    }\n\n    componentDidMount() {\n        this.cargaColumnas();\n        if(this.props.usuarios){\n            this.filtraUsuarios(this.props.usuarios) \n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.usuarios !== this.props.usuarios){\n            this.filtraUsuarios(this.props.usuarios)\n        }\n        else if(prevState.modalAsociar !== this.state.modalAsociar){\n            if( this.state.modalAsociar ){\n                this.props.socket.on('notification', msg => {\n                    console.log(msg)\n                    if(!this.props.usuarios.map(u => u.idcard).includes(msg.es)){\n                        request(\"/users/\" + this.state.usuarioAsociar, {\n                            method: \"PUT\",\n                            body: {\n                                idcard: msg.es && msg.es.idcard\n                            }\n                        }).then(data => {\n                            message.info(\"La tarjeta ha sido asociada correctamente\")\n                            this.fetchUsers()\n                            this.setState({ modalAsociar: false, usuarioAsociar: undefined })\n                        }).catch(err => {\n                            message.error(\"Se produjo un error durante el proceso de asociación de la tarjeta\")\n                            console.log(err)\n                            this.setState({ modalAsociar: false, usuarioAsociar: undefined })\n                        })\n                    }\n                    else{\n                        message.error(\"Esa tarjeta ya está asociada a un usuario. Desasociela antes de reasignarla.\")\n                    }\n                })\n            }\n            else{\n                this.props.socket.off('notification')\n            }\n        }\n        else if(prevProps.blueCollar !== this.props.blueCollar){\n            this.cargaColumnas();\n        }\n    }\n\n    cargaColumnas = () => {\n        const columns = [{\n            title: 'Nombre de usuario',\n            dataIndex: 'username',\n            key: 'username',\n        }, {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n        }]\n\n        const extraColumnsA = (getUserInfo().manager && !this.props.blueCollar) ? [{\n            title: 'Manager',\n            dataIndex: 'manager',\n            render: bool => bool ? <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" twoToneColor=\"#52c41a\"/> : <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#eb2f96\"/>\n        }, {\n            title: 'ID Tarjeta',\n            key: 'idcard',\n            render: (text, record) => {\n                return record.idcard ? \n                    <div>\n                        <span>{record.idcard}&nbsp;&nbsp;</span>\n                        <Popconfirm title={`¿Estás seguro de que deseas desasociar la tarjeta de ${record.email}?`} onConfirm={evt => this.desasociarTarjeta(record)}>\n                            <Tag color=\"volcano\" key={`${record._id}_denegar`}><Icon type=\"delete\" /></Tag>\n                        </Popconfirm>\n                    </div>\n                    : <Button type=\"primary\" onClick={() => this.setState({ modalAsociar: true, usuarioAsociar: record._id })}>Asociar tarjeta</Button>\n            }\n        }] : []\n        \n        const extraColumnsA2 = [{\n            key: 'btn',\n            render: (text, record) => (\n                <Link to={\"/usuario/\" + record._id}>\n                    <Tag key={`${record._id}_denegar`}><Icon type=\"user\" /> Editar</Tag>\n                </Link>\n            )\n        }]\n\n        const extraColumnsB = [{\n            title: 'Acción',\n            key: 'action',\n            render: (text, record) => (\n              <span>\n                <Popconfirm title={`¿Estás seguro de que deseas aceptar en ${record.equipo && record.equipo.nombre} a ${record.email}?`} onConfirm={evt => this.responderSolicitud(record, true)}>\n                    <Tag color=\"green\" key={`${record._id}_aceptar`}>Aceptar</Tag>\n                </Popconfirm>\n                <Popconfirm title={`¿Estás seguro de que deseas denegar la solicitud de ${record.email} para entrar en ${record.equipo && record.equipo.nombre}?`} onConfirm={evt => this.responderSolicitud(record, false)}>\n                    <Tag color=\"volcano\" key={`${record._id}_denegar`}>Denegar</Tag>\n                </Popconfirm>\n              </span>\n            ),\n        }]\n        this.setState({ columns, extraColumnsA, extraColumnsA2, extraColumnsB })\n    }\n\n    filtraUsuarios = usuarios => {\n        const activos = this.props.usuarios.filter(u => u.confirmed).map(u => ({...u, key: u._id}))\n        const pendientes = this.props.usuarios.filter(u => !u.confirmed).map(u => ({...u, key: u._id}))\n        this.setState({ activos, pendientes })\n    }\n\n    fetchUsers = async () => {\n        await this.props.dispatch(fetchUsuarios())\n        this.filtraUsuarios(this.props.usuarios)\n    }\n\n    responderSolicitud = (usuario, bool) => {\n        if(bool){ //Aceptar\n            request(\"/users/\" + usuario._id, {\n                method: \"PUT\",\n                body: { confirmed: true }\n            }).then(resp => {\n                message.success(`¡${usuario.email} ahora forma parte del equipo ${usuario.equipo.nombre}!`)\n                this.fetchUsers()\n            }).catch(err => {\n                console.error(err)\n                message.error(\"Se ha producido un error durante la confirmación de la solicitud del usuario\")                    \n            })\n        }\n        else{ //Denegar\n            request(\"/users/\" + usuario._id, {\n                method: \"DELETE\",\n            }).then(resp => {\n                message.info(\"La solicitud se ha denegado correctamente\")\n                this.fetchUsers()               \n            }).catch(err => {\n                message.error(\"Se ha producido un error durante la denegación de la solicitud del usuario\")       \n                console.error(err)\n            })\n        }\n    }\n\n    desasociarTarjeta = usuario => {\n        console.log(usuario)\n        request(\"/users/\" + usuario._id, {\n            method: \"PUT\",\n            body: {\n                idcard: \"\"\n            }\n        }).then(() => this.fetchUsers())\n    }\n    \n    render(){\n        const { activos, pendientes, columns, extraColumnsA, extraColumnsA2, extraColumnsB } = this.state\n        //console.log(columns)\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>Usuarios activos</h1>\n                    <Table dataSource={activos} columns={[...columns, ...extraColumnsA, ...extraColumnsA2 ]} />\n                    {\n                        (getUserInfo().manager && !this.props.blueCollar) && [\n                            <h1 key=\"pendAprobTitle\">Usuarios pendientes de aprobación</h1>,\n                            <Table key=\"pendAprobTable\" dataSource={pendientes} columns={[...columns, ...extraColumnsB]} />\n                        ]\n                    }\n                </Frame>\n                <Modal\n                    visible={this.state.modalAsociar}\n                    onOk={e => e}\n                    onCancel={() => this.setState({ modalAsociar: false, usuarioAsociar: undefined })}\n                    footer={[\n                        <Button key=\"back\" type=\"primary\" onClick={() => this.setState({ modalAsociar: false, usuarioAsociar: undefined })}>Cancelar</Button>,\n                    ]}\n                >\n                    <p>Acerca la tarjeta al lector sin cerrar esta ventana para asociarla al usuario</p>\n                </Modal>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        usuarios: state.usuarios,\n        blueCollar: state.blueCollar\n    }\n}\n\nexport default socketConnect(connect(mapStateToProps)(Usuarios))","import React, { Component } from 'react'\nimport { getToken, getUserInfo } from './utils/auth';\nimport { Layout, Input, Form, Radio, Button, message } from 'antd'\nimport { connect } from 'react-redux'\nimport request from './utils/request'\nimport Frame from './Frame';\nimport { fetchUsuarios, fetchES } from './actions'\nimport PrivateComponent from './PrivateComponent';\n\nclass EditUsuario extends Component{\n\n    state = {\n        usuario: {},\n        duracionjornada: \"\",\n        frasesStr: \"\",\n        frases: [],\n        frasePr: \"\",\n        frasePrAct: false,\n        manager: undefined\n    }\n\n    componentDidMount(){\n        if(this.props.usuarios.length > 0){\n            const usuario = this.props.usuarios.find(u => u._id === this.props.match.params.id) \n            console.log(usuario)\n            this.setState({ \n                duracionjornada: usuario.duracionjornada,\n                frasesStr: usuario.frases.reduce((a, b) => a + b + \"\\n\", \"\"),\n                frases: usuario.frases,\n                frasePr: usuario.frasePrioritaria,\n                frasePrAct: usuario.actFrasePrioritaria,\n                manager: usuario.manager,\n                usuario\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(this.props.usuarios && this.props.usuarios !== prevProps.usuarios){\n            const usuario = this.props.usuarios.find(u => u._id === this.props.match.params.id) \n            console.log(usuario)\n            this.setState({ \n                duracionjornada: usuario.duracionjornada,\n                frasesStr: usuario.frases.reduce((a, b) => a + b + \"\\n\", \"\"),\n                frases: usuario.frases,\n                frasePr: usuario.frasePrioritaria,\n                frasePrAct: usuario.actFrasePrioritaria,\n                manager: usuario.manager,\n                usuario\n            })\n        }\n        else if( this.state.frasesStr !== prevState.frasesStr ){\n            this.setState({ frases: this.state.frasesStr.split(/\\n/gm) })\n        }\n    }\n\n    guardarDatos = () => {\n        if(this.state.duracionjornada > 0 && this.state.duracionjornada < 24){\n            request(\"/users/\" + this.state.usuario._id, {\n                method: \"PUT\",\n                body: {\n                    frases: this.state.frases.filter(f => ![undefined, null, \"\"].includes(f)),\n                    frasePrioritaria: this.state.frasePr,\n                    actFrasePrioritaria: this.state.frasePrAct,\n                    manager: this.state.manager,\n                    duracionjornada: this.state.duracionjornada\n                }\n            }).then(data => {\n                //console.log(data)\n                message.success(\"Los cambios se guardaron correctamente\")\n                this.props.dispatch(fetchES())\n                this.props.dispatch(fetchUsuarios())\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Se produjo un error durante el guardado\")\n            })\n        }\n        else{\n            message.error(\"La duración media de la jornada ha de estar entre 0 y 24\")\n        }\n    }\n\n    render(){\n        const { usuario } = this.state\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>{ usuario.username }</h1>\n                    <PrivateComponent blue={this.props.blueCollar}>\n                        <Form.Item key=\"editUserJornada\" label=\"Duración media de su jornada laboral\">\n                            <Input type=\"number\" value={this.state.duracionjornada} onChange={e => this.setState({ duracionjornada: e.target.value })} />\n                        </Form.Item>\n                        <Form.Item key=\"editUserManager\" label=\"Manager\">\n                            <Radio.Group  value={ this.state.manager }>\n                                <Radio.Button value={true} onClick={() => this.setState({ manager: true })}>Sí</Radio.Button>\n                                <Radio.Button value={false} onClick={() => this.setState({ manager: false })}>No</Radio.Button>\n                            </Radio.Group>\n                        </Form.Item>\n                    </PrivateComponent>\n                    <Form.Item label=\"Frases (una por línea)\">\n                        <Input.TextArea rows={6} value={this.state.frasesStr} onChange={e => this.setState({ frasesStr: e.target.value })} />\n                    </Form.Item>\n                    <Form.Item label=\"Frase prioritaria\">\n                        <Input type=\"text\" value={this.state.frasePr} onChange={e => this.setState({ frasePr: e.target.value })}/>\n                        <Radio.Group value={ this.state.frasePrAct }>\n                            <Radio.Button value={true} onClick={() => this.setState({ frasePrAct: true })}>Activada</Radio.Button>\n                            <Radio.Button value={false} onClick={() => this.setState({ frasePrAct: false })}>Desactivada</Radio.Button>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Button onClick={this.guardarDatos}>Guardar</Button>\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        usuarios: state.usuarios,\n        blueCollar: state.blueCollar\n    }\n}\n\nexport default connect(mapStateToProps)(EditUsuario)","import React, { Component } from 'react'\nimport { getToken } from './utils/auth';\nimport { Layout } from 'antd'\nimport Frame from './Frame';\n\n\nclass Analitica extends Component{\n    render(){\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>Analitica</h1>\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nexport default Analitica","import React, { Component } from 'react'\nimport { Select, Form, DatePicker, TimePicker, Button, message } from 'antd'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { getUserInfo } from '../utils/auth';\nimport request from '../utils/request';\n\nclass ModuloRegistros extends Component{\n\n    addRegistro = async () => {\n        const idUser = this.props.usuario || this.state.selectedUser._id || undefined\n        if(![this.state.fechaNuevoRegistro, this.state.horaEntradaNuevoRegistro, this.state.horaSalidaNuevoRegistro, idUser].includes(undefined)){\n            const fechaEntrada = this.state.fechaNuevoRegistro.clone().hour(this.state.horaEntradaNuevoRegistro.hour()).minute(this.state.horaEntradaNuevoRegistro.minute())\n            const fechaSalida = this.state.fechaNuevoRegistro.clone().hour(this.state.horaSalidaNuevoRegistro.hour()).minute(this.state.horaSalidaNuevoRegistro.minute())\n\n            const ePasado = fechaEntrada.isBefore(moment())\n            const sPasado = fechaSalida.isBefore(moment())\n            const eAntesDeS = fechaEntrada.isBefore(fechaSalida)\n\n            if( ePasado && sPasado && eAntesDeS ){\n                const registroEntrada = {\n                    user: idUser,\n                    fecha: moment.utc(fechaEntrada).format(),\n                    ultimoEditor: getUserInfo()._id,\n                    aprobado: getUserInfo().manager ? true : false\n                }\n                const registroSalida = {\n                    user: idUser,\n                    fecha: moment.utc(fechaSalida).format(),\n                    ultimoEditor: getUserInfo()._id,\n                    aprobado: getUserInfo().manager ? true : false\n                }\n\n                try{\n                    const respEntrada = await request(\"/registros\", { method: \"POST\", body: registroEntrada })\n                    const respSalida = await request(\"/registros\", { method: \"POST\", body: registroSalida })\n                    // console.log({ respEntrada, respSalida })\n                    if( getUserInfo().manager === true ){\n                        message.success(\"El registro se añadió correctamente\")\n                    }\n                    else {\n                        message.success(\"El registro se añadió correctamente, actualmente está pendiente de aprobación\")\n                    }\n                    if(this.props.cerrarModal){ this.props.cerrarModal() }\n                    this.setState({ \n                        fechaNuevoRegistro: undefined,\n                        horaEntradaNuevoRegistro: undefined,\n                        horaSalidaNuevoRegistro: undefined\n                    })\n                }\n                catch(err){\n                    console.log(err)\n                    message.error(\"Se produjo un error durante el guardado del registro\")\n                }\n            }\n            else{\n                if(!ePasado){ message.error(\"La hora de entrada es inválida\") }\n                if(!sPasado){ message.error(\"La hora de salida es inválida\") }\n                if(!eAntesDeS ){ message.error(\"La hora de entrada ha de ser anterior a la de salida\") }\n            }\n        }\n        else{ message.warning(\"Faltan campos por completar\") }\n    }\n\n    render(){\n        const Option = Select.Option\n        return(\n            <div>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", flexWrap: \"wrap\" }}>\n                    {!this.props.usuario &&\n                        <Form.Item label=\"Usuario\">\n                            <Select\n                                showSearch\n                                style={{ width: 200, marginBottom: 20 }}\n                                placeholder=\"Selecciona un usuario\"\n                                optionFilterProp=\"children\"\n                                onChange={op => {\n                                    const selectedUser = this.props.usuarios.find(u => u.username === op)\n                                    this.setState({ selectedUser })\n\n                                }}\n                                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                                style={{ width: 250 }}\n                            >\n                                { this.props.usuarios.map(u => \n                                    <Option value={u.username} key={u._id}>{u.username}</Option>\n                                )}\n                            </Select>\n                        </Form.Item>\n                    }\n                    <Form.Item label=\"Fecha\">\n                        <DatePicker onChange={fechaNuevoRegistro => this.setState({ fechaNuevoRegistro })} style={{ width: 250 }}/>\n                    </Form.Item>\n                    <Form.Item label=\"Hora de entrada\">\n                        <TimePicker onChange={horaEntradaNuevoRegistro => this.setState({ horaEntradaNuevoRegistro })} style={{ width: 250 }}/>\n                    </Form.Item>\n                    <Form.Item label=\"Hora de salida\">\n                        <TimePicker onChange={horaSalidaNuevoRegistro => this.setState({ horaSalidaNuevoRegistro })} style={{ width: 250 }}/>\n                    </Form.Item>\n                </div>\n                <Button onClick={this.addRegistro}>Añadir registro</Button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        usuarios: state.usuarios\n    }\n}\n\nexport default connect(mapStateToProps)(ModuloRegistros)\n\n\n\n","import React, { Component } from 'react'\nimport { Modal, Form, Table, Button, TimePicker, message, Icon, Popconfirm, Tag } from 'antd';\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { fetchES } from '../actions'\nimport { getUserInfo, getToken } from '../utils/auth';\nimport request from '../utils/request';\n\nclass ModalInfoRegistros extends Component {\n    state = {\n        datos: {},\n        datosMod: {},\n        modificado: false,\n        nuevosRegistros: [],\n        hora: moment(),\n        columns: [],\n        extraColumns: []\n    }\n\n    componentDidMount(){\n        this.cargaColumnas()\n    }\n\n    componentDidUpdate(prevProps) {\n        if((prevProps.datos !== this.props.datos) && this.props.datos){\n            this.setState({ datos: this.props.datos, datosMod: this.props.datos })\n            this.cargaColumnas()\n        }\n    }\n\n    cargaColumnas = () => {\n        const columns = [\n            { \n                key: \"a\",\n                title: \"Hora\",\n                render: row => moment(row.fecha).format(\"HH:mm\")\n            },\n            {\n                key: \"b\",\n                title: \"Evento\",\n                render: (row, mierda, i) => {\n                    if(i === 0){ return \"Entrada\" }\n                    else if(i % 2){ \n                        if(i === this.state.datosMod.registros.length - 1){ return \"Salida\" }\n                        else{ return \"Comienzo de descanso\" }\n                    }\n                    else{ return \"Final de descanso\"}\n                }\n            }\n        ]\n        const extraColumns = this.props.colAprobado ? [{\n            key: \"c\",\n            title: \"Aprobado\",\n            render: row => (\n                    row.aprobado ? <Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" twoToneColor=\"#52c41a\"/> : (getUserInfo().manager && !this.props.blueCollar) ?\n                    <span>\n                        <Popconfirm title={`¿Estás seguro de que deseas aprobar la jornada?`} onConfirm={() => this.jornadaPendiente(true, row)}>\n                            <Tag color=\"green\" key={`${row._id}_aceptar`}>Aceptar</Tag>\n                        </Popconfirm>\n                        <Popconfirm title={`¿Estás seguro de que deseas denegar jornada?`} onConfirm={() => this.jornadaPendiente(false, row)}>\n                            <Tag color=\"volcano\" key={`${row._id}_denegar`}>Denegar</Tag>\n                        </Popconfirm>\n                    </span> : <Icon type=\"close-circle\" theme=\"twoTone\" twoToneColor=\"#eb2f96\"/>                  \n            )\n        }] : []\n        this.setState({ columns, extraColumns })\n    }\n\n    addRegistro = () => {\n        const fecha = this.state.hora\n            .date(moment(this.state.datos.entrada).date())\n            .month(moment(this.state.datos.entrada).month())\n            .year(moment(this.state.datos.entrada).year())\n\n        if(fecha.isSameOrBefore(moment())){\n            const registros = [\n                ...this.state.datosMod.registros,\n                { fecha: fecha.utc().format() }\n            ].sort((a, b) => {\n                if(moment(a.fecha).isBefore(moment(b.fecha))){ return -1 }\n                else if(moment(a.fecha).isAfter(moment(b.fecha))){ return 1 }\n                else{ return 0 }\n            })\n\n\n            this.setState({ \n                modificado: true,\n                datosMod: {\n                    ...this.state.datosMod, \n                    registros\n                },\n                nuevosRegistros: [...this.state.nuevosRegistros, {\n                    fecha: this.state.hora.utc().format(),\n                    user: this.state.datos.registros[0].user._id,\n                    ultimoEditor: getUserInfo()._id,\n                    aprobado: getUserInfo().manager ? true : false\n                }]\n            })\n        }\n        else{\n            message.warning(\"No se pueden añadir registros por adelantado\")\n        }\n    }\n\n    guardarNuevosRegistros = () => {\n        const n = this.state.nuevosRegistros.length\n        const registros = this.state.nuevosRegistros\n        Modal.confirm({\n            title: `Por razones legales no es posible editar ni borrar registros. ¿Estás seguro de que quieres añadir ${ n>1 ? n : \"un\" } nuevo${ n>1 ? \"s\" : \"\"} registro${ n>1 ? \"s\" : \"\"}?`,\n            onOk: async () => {\n                const prom = registros.map(r => (\n                    fetch(process.env.REACT_APP_API_URL + \"/registros\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Authorization\": \"Bearer \" + getToken(),\n                            \"Accept\": \"application/json\",\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(r)\n                    }).catch(err => err)\n                ))\n                const resp = (await Promise.all(prom)).map(r => r.status)\n                if(resp.some(r => r >= 400)){ \n                    message.error(\"Se ha producido un error durante el guardado de los registros\"); \n                    console.log(resp) \n                }\n                else{ \n                    message.success(\"Los nuevos registros se añadieron correctamente\") \n                    this.setState({ modificado: false, nuevosRegistros: [] })\n                    Modal.destroyAll()\n                }\n            }\n        })\n    }\n\n    jornadaPendiente = (accion, dato) => {\n        if(accion === true){\n            request(\"/registros/\" + dato._id, {\n                method: \"PUT\",\n                body: {\n                    aprobado: true\n                }\n            }).then(data => {\n                //console.log(data)\n                message.success(\"Se ha aprobado el registro correctamente\")\n                this.props.dispatch(fetchES())\n                this.setState({ datosMod: {\n                    ...this.state.datosMod, \n                    registros: this.state.datosMod.registros.map(r => {\n                        if(r._id === dato._id){ return {...r, aprobado: true }}\n                        else{ return r }\n                    })\n                }})\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Ha ocurrido un error durante la aprobación del registro\")\n            })\n        }\n        else{\n            request(\"/registros/\" + dato._id, { method: \"DELETE\" }).then(data => {\n                message.success(\"Se ha denegado el registro correctamente\")\n                this.props.dispatch(fetchES())\n                this.setState({ datosMod: {\n                    ...this.state.datosMod, \n                    registros: this.state.datosMod.registros.filter(r => r._id !== dato._id)\n                }})\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Ha ocurrido un error durante la denegación del registro\")\n            })\n        }\n    }\n\n    render(){\n        const { datos, datosMod } = this.state\n        return (\n            <Modal\n                visible={this.props.visible}\n                footer={null}\n                onCancel={() => {\n                    if(this.state.modificado){\n                        Modal.confirm({\n                            title: \"Los registros no han sido guardados. ¿Seguro que desea salir?\",\n                            onOk: () => { \n                                this.setState({ datosMod: this.state.datos, modificado: false, nuevosRegistros: [] })\n                                this.props.cb() \n                            }\n                        })\n                    } else{ \n                        this.props.cb() }\n                }}\n                width=\"80vw\"\n            >\n                <h2>{ datos.usuario + \" - \" + moment(datos.entrada).format(\"YYYY-MM-DD\") }</h2>\n                <div>\n                    <Table\n                        dataSource={datosMod.registros}\n                        rowKey=\"_id\"\n                        pagination={false}\n                        style={{ marginBottom: 20 }}\n                        columns={[...this.state.columns, ...this.state.extraColumns]}\n                    />\n                </div>\n                <div style={{ marginBottom: 20 }}>\n                    <TimePicker placeholder=\"Selecciona hora\" value={this.state.hora.utcOffset(2)} onChange={hora => this.setState({ hora }) } style={{ marginRight: 20 }} />\n                    <Button onClick={this.addRegistro}>Añadir registro</Button>\n                </div>\n                {   this.state.modificado &&\n                    <div>\n                        <Button type=\"danger\" style={{ marginRight: 20 }} onClick={() => this.setState({ datosMod: this.state.datos, modificado: false, nuevosRegistros: [] })}>Restablecer</Button>\n                        <Button type=\"primary\" onClick={() => this.guardarNuevosRegistros()}>Guardar</Button>\n                    </div>\n                }\n            </Modal>\n        )\n    }\n}\n\nexport default connect()(ModalInfoRegistros)\n","import React, { Component } from 'react'\nimport { Layout, Table, Collapse, Statistic, Progress, DatePicker, Button, Modal, Popconfirm, Tag, message } from 'antd'\nimport Frame from './Frame';\nimport { connect } from 'react-redux';\nimport { socketConnect } from 'socket.io-react';\nimport moment from 'moment';\nimport { getUserInfo, getToken } from './utils/auth';\nimport ModuloRegistros from './modulosConfig/ModuloRegistros'\nimport ModalInfoRegistros from './components/ModalInfoRegistros'\nimport request from './utils/request';\nimport { fetchES } from './actions';\n\nclass Registro extends Component{\n\n    state = {\n        usuarios: [],\n        userInfo: getUserInfo(),\n        mes: moment(),\n        modalVisible: false, \n        modalLoading: false\n    }\n\n    columns = [{\n        title: 'Entrada',\n        dataIndex: 'entrada',\n        key: 'entrada',\n        defaultSortOrder: 'descend',\n        sorter: (a, b) => moment(a.entrada).diff(moment(b.entrada)),\n        render: hora => moment(hora).format(\"YYYY-MM-DD, HH:mm\")\n    }, {\n        title: 'Salida',\n        dataIndex: 'salida',\n        key: 'salida',\n        sorter: (a, b) => moment(a.entrada).diff(moment(b.entrada)),\n        render: hora => hora !== \"-\" ? moment(hora).format(\"YYYY-MM-DD, HH:mm\") : \"-\"\n    }, {\n        title: 'Tiempo trabajado',\n        dataIndex: 'horas',\n        key: 'horas',\n        sorter: (a, b) => a.horas - b.horas,\n        render: horas => horas !== \"-\" ? Math.trunc(horas, 10) + \"h \" + Math.round((horas % 1) * 60) + \"m\" : \"-\"\n    }, {\n        title: 'Tiempo de descanso',\n        dataIndex: 'tiempoDescanso',\n        key: 'tiempoDescanso',\n        sorter: (a, b) => a.tiempoDescanso - b.tiempoDescanso,\n        render: tiempoDescanso => tiempoDescanso !== \"-\" ? Math.trunc(tiempoDescanso, 10) + \"h \" + Math.round((tiempoDescanso % 1) * 60) + \"m\" : \"-\"\n    }, {\n        title: \"\",\n        dataIndex: \"detalles\",\n        key: \"detalles\",\n        render: () => <Tag color=\"blue\">Detalles</Tag>\n    }]\n\n    componentDidMount() {\n        if(this.props.es){\n            this.procesaES(this.state.mes.month(), this.state.mes.year())\n        }\n        // console.log( this.diasLaborables() )\n        // console.log( this.diasLaborables(2, 2019) )\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.es !== this.props.es || !(prevState.mes.isSame(this.state.mes, \"month\")) ){\n            this.procesaES(this.state.mes.month(), this.state.mes.year());\n        }\n    }\n\n    diasLaborables = (userId, month = moment().month() + 1, year = moment().year()) => {\n        const diasFestivos = (this.props.dias.filter(d => d.tipo === \"festivo\" && moment(d.fecha).month() === month)).length\n        const diasEntreSemana = Array(moment().month(month).year(year).daysInMonth()).fill(null).filter((e, i) => {\n            return moment().year(year).month(month).date(i+1).weekday() <= 4\n        }).length\n        const diasLibres = (this.props.dias.filter(d => {\n            return d.user && ( d.user._id === userId && d.aprobado === true && moment(d.fecha).month() === month)\n        })).length\n        return diasEntreSemana - diasLibres - diasFestivos\n    }\n\n    procesaES = (month = moment().month() + 1, year = moment().year()) => {\n\n        const diasDeEseMes = moment().month(month - 1).year(year).daysInMonth()\n        const usuarios = this.props.es.map(u => {\n            const duracionJornada = u.duracionjornada || 8;\n            const diasLaborables = this.diasLaborables(u._id, month, year)\n            const dias = Array(diasDeEseMes).fill(null)\n                .map((e, i) => moment().subtract(i, \"days\").format(\"YYYY-MM-DD\"))\n                .map(d => u.registros.filter(r =>  moment(r.fecha).isSame(moment(d), \"days\") && moment(r.fecha).isSame(this.state.mes, \"month\"))\n                    .sort((a, b) => {\n                        if(moment(a.fecha).isBefore(moment(b.fecha))){ return -1 }\n                        else if(moment(b.fecha).isBefore(moment(a.fecha))){ return 1 }\n                        else{ return 0 }\n                    })\n                )\n\n            const jornadas = dias.map((dia, i) => {\n                const arrayCachos = Array(Math.ceil(dia.length / 2)).fill(null).map((e, j) => {\n                    const a = moment(dia[(2*j)].fecha);\n                    const b = dia[(2*j)+1] ? moment(dia[(2*j)+1].fecha) : undefined;\n                    const m = b ? moment.duration(b.diff(a)) : ( a.isSame(moment(), \"day\") ? moment.duration(moment().diff(a)) : \"-\" )\n                    const horas = m !== \"-\" ? Math.round(m.as('hours')*100)/100 : \"-\"\n                    return {\n                        key: u._id + \"-\" + i + \"-\" + j,\n                        entrada: a.format(),\n                        aprobado: (dia[(2*j)].aprobado && (dia[(2*j)+1] ? dia[(2*j)+1].aprobado : true)) ? true : false,\n                        salida: b ? b.format() : \"-\",\n                        horas\n                    }\n                })\n\n                const tiempoDescanso = Array(arrayCachos.length > 0 ? arrayCachos.length - 1 : 0).fill(null).map((e, i) => {\n                    const comienzoDescanso = moment(arrayCachos[i].salida)\n                    const finDescanso = moment(arrayCachos[i+1].entrada)\n                    const duracionDescanso = Math.round(moment.duration(finDescanso.diff(comienzoDescanso)).as(\"hours\")*100)/100\n                    return duracionDescanso\n                }).reduce((a, b) => a + b, 0)\n\n                const arrayHoras = arrayCachos.map(c => c.horas)\n                const jornada = arrayCachos[0] ? {\n                    key: arrayCachos[0].key,\n                    entrada: arrayCachos[0].entrada,\n                    salida: arrayCachos.slice(-1)[0].salida,\n                    aprobado: arrayCachos.map(a => a.aprobado).includes(false) ? false : true,\n                    horas: !arrayHoras.includes(\"-\") ? arrayHoras.reduce((a, b) => a + b, 0) : \"-\",\n                    usuario: u.username,\n                    registros: dia,\n                    tiempoDescanso\n                } : []\n                return jornada\n            })\n\n            const horasTrabajadas = Math.round(jornadas.filter(j => j.aprobado).map(j => j.horas).filter(h => h !== \"-\" && h !== undefined).reduce((a, b) => a + b, 0) * 100 ) / 100\n            const horasMes = diasLaborables * duracionJornada\n            const porcentajeHoras = Math.round((horasTrabajadas / (diasLaborables * duracionJornada)) * 10000) / 100\n            const horasPendientes = Math.round((horasMes - horasTrabajadas) * 100 ) / 100\n\n            //console.log({ ...u, jornadas, horasTrabajadas, horasPendientes, porcentajeHoras, duracionJornada, diasLaborables })\n            return { ...u, jornadas, horasTrabajadas, horasPendientes, porcentajeHoras, duracionJornada, diasLaborables }\n        })\n        \n        this.setState({ \n            usuarios,\n            jornadasPorAprobar: [].concat.apply([], usuarios.filter(u => u._id === getUserInfo()._id || (getUserInfo().manager && !this.props.blueCollar)).map(u => u.jornadas)).filter(j => !Array.isArray(j) && !j.aprobado)\n        })\n    }\n\n    handleRowClick = (fila, apr) => {\n        this.setState({ rowSelect: fila, modalInfo: true, modalInfoApr: apr })\n    }\n\n\n    render(){\n        const { modalVisible, modalLoading } = this.state\n        const MonthPicker = DatePicker.MonthPicker\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>Jornadas</h1>\n                    <MonthPicker placeholder=\"Seleccionar mes\" value={this.state.mes} onChange={mes => this.setState({ mes })} style={{ marginBottom: 20 }}/>\n                    {/*( this.state.userInfo.manager && !this.props.blueCollar)*/ true &&\n                        <div>\n                            <h3>Jornadas pendientes de aprobación</h3>\n                            <Table style={{ marginBottom: \"1em\" }} dataSource={this.state.jornadasPorAprobar} locale={{\n                                emptyText: \"No hay jornadas pendientes de aprobar\"\n                            }}\n                            onRow={row => ({\n                                onClick: () => this.handleRowClick(row, true)\n                            })}\n                            columns={[{\n                                title: 'Usuario',\n                                dataIndex: 'usuario',\n                                key: 'usuario',\n                            },{\n                                title: 'Día',\n                                dataIndex: 'entrada',\n                                key: 'dia',\n                                render: e => moment(e).format(\"YYYY-MM-DD\")\n                            },{\n                                title: 'Entrada',\n                                dataIndex: 'entrada',\n                                key: 'entrada',\n                                render: e => moment(e).format(\"HH:mm\")\n                            },{\n                                title: 'Salida',\n                                dataIndex: 'salida',\n                                key: 'salida',\n                                render: e => moment(e).format(\"HH:mm\") === \"Invalid date\" ? \" - \" : moment(e).format(\"HH:mm\")\n                            },{\n                                title: 'Horas',\n                                dataIndex: 'horas',\n                                key: 'horas',\n                            }, {\n                                title: \"\",\n                                dataIndex: \"detalles\",\n                                key: \"detalles\",\n                                render: () => <Tag color=\"blue\">Detalles</Tag>\n                            }]}/>\n                        </div>\n                    }\n\n                        <Collapse defaultActiveKey={!(getUserInfo().manager && !this.props.blueCollar) ? getUserInfo()._id : undefined}>\n                        {\n                            this.state.usuarios && this.state.usuarios.filter(u => {\n                                return this.state.userInfo._id === u._id || (this.state.userInfo.manager && !this.props.blueCollar)}).map((u, i) => [\n                                <Collapse.Panel header={<div style={{ display: \"flex\", justifyContent: \"space-between\", paddingRight: \"10px\" }}>\n                                    <span>{ u.username }</span>\n                                    <div style={{ width: \"200px\",  }}>\n                                        <Progress percent={u.porcentajeHoras} />\n                                    </div>\n                                </div>} key={u._id}>\n                                    <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-evenly\" }}>\n                                        <Statistic title=\"Horas trabajadas\" value={ Math.trunc(u.horasTrabajadas, 10) + \"h \" + Math.round((u.horasTrabajadas % 1) * 60) + \"m\"  } />\n                                        <Statistic title=\"Horas pendientes\" value={ Math.trunc(u.horasPendientes, 10) + \"h \" + Math.round((u.horasPendientes % 1) * 60) + \"m\" } />\n                                        <Statistic title=\"Días laborables de este mes\" value={ u.diasLaborables } />\n                                        <Statistic title=\"Duración de jornada\" value={ u.duracionJornada + \"h\" } />\n                                    </div>\n                                    <h3 style={{marginTop: 20 }}>Desglose de jornadas</h3>\n                                    <Table \n                                        key={\"table\"+i} \n                                        dataSource={[].concat.apply([], u.jornadas.filter(j => j.aprobado))} \n                                        columns={this.columns} \n                                        onRow={row => ({\n                                            onClick: () => this.handleRowClick(row, false)\n                                        })}\n                                    />\n                                    {( this.state.userInfo._id === u._id || (this.state.userInfo.manager && !this.props.blueCollar)) && \n                                        <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}>\n                                            <Button onClick={() => this.setState({ modalVisible: true, modalUser: u._id })}>Añadir jornada</Button>\n                                        </div>\n                                    }\n                                </Collapse.Panel>,\n                            ])\n                        }\n                        </Collapse>\n                </Frame>\n                <Modal\n                    visible={modalVisible}\n                    title=\"Añadir registro\"\n                    onOk={this.handleNuevoRegistro}\n                    onCancel={() => { this.setState({ modalVisible: false })}}\n                    style={{ maxWidth: 900 }}\n                    width=\"90%\"\n                    footer={null}\n                    >\n                    <ModuloRegistros usuario={this.state.modalUser} cerrarModal={() => this.setState({ modalVisible: false })} />\n                </Modal>\n                <ModalInfoRegistros\n                    visible={this.state.modalInfo}\n                    colAprobado={this.state.modalInfoApr}\n                    cb={() => this.setState({ modalInfo: false })}\n                    datos={this.state.rowSelect}\n                    blueCollar={this.props.blueCollar}\n                />\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        es: state.es,\n        dias: state.dias,\n        blueCollar: state.blueCollar\n    }\n}\n\nexport default socketConnect(connect(mapStateToProps)(Registro))","import React, { Component } from 'react'\nimport { getToken, getUserInfo } from './utils/auth';\nimport { Layout, Upload, message, Icon, Form, Input, Button } from 'antd'\nimport Frame from './Frame';\nimport request from './utils/request';\n\n\nclass Perfil extends Component{\n\n    state = {\n        loading: false,\n        nombre: getUserInfo().nombre || \"\"    \n    }\n\n    handleUpload = ({ onSuccess, onError, file }) => {\n        let imgToUpload = new FormData();\n\n        const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJPG) {\n          message.error('Solo se aceptan imagenes en formato JPG y PNG');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n          message.error('Las imagenes han de ser más pequeñas de 2MB');\n        }\n\n        if( isJPG && isLt2M ){  \n            imgToUpload.append('files', file);\n            imgToUpload.append('field', \"avatar\");\n            imgToUpload.append('refId', getUserInfo()._id);\n            imgToUpload.append('ref', \"user\");\n            imgToUpload.append('source', 'users-permissions')\n            this.setState({ loading: true })\n            request(\"/upload\", {\n                method: 'POST',\n                body: imgToUpload,\n            }, false).then(data => {\n                console.log(data)\n                this.setState({ loading: false })\n                message.success(\"El avatar se actualizó correctamente.\")\n                let userInfo = getUserInfo()\n                userInfo.avatar = data[0]\n                window.localStorage.setItem(\"user\", JSON.stringify(userInfo))\n            }).catch(err => {\n                this.setState({ loading: false })\n                console.log(err)\n                message.error(\"Ocurrió un error durante la subida del nuevo avatar\")\n            });\n        }\n    }\n\n    handleSave = () => {\n        request(\"/users/\" + getUserInfo()._id, {\n            method: \"PUT\",\n            body: {\n                nombre: this.state.nombre\n            }\n        }).then(data => {\n            let userInfo = getUserInfo()\n            userInfo.nombre = this.state.nombre\n            window.localStorage.setItem(\"user\", JSON.stringify(userInfo))\n            message.success(\"Los datos se guardaron correctamente\")\n        }).catch(err => {\n            message.error(\"Ocurrió un error durante el guardado de datos\")\n            console.log(err)\n        })\n    }\n\n    render(){\n\n        const uploadButton = (\n            <div>\n              <Icon type={this.state.loading ? 'loading' : 'plus'} />\n              <div className=\"ant-upload-text\">Upload</div>\n            </div>\n        );\n        const imageUrl = this.state.imageUrl;\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>Perfil</h1>\n                    <div style={{ width: \"320px\", marginBottom: 20 }}>\n                        <Upload\n                            name=\"avatar\"\n                            listType=\"picture-card\"\n                            className=\"avatar-uploader\"\n                            showUploadList={false}\n                            onChange={this.handleChange}\n                            customRequest={this.handleUpload}\n                        >\n                            {imageUrl ? <img src={imageUrl} alt=\"avatar\" /> : uploadButton}\n                        </Upload>\n\n                        <Form.Item label=\"Nombre\" style={{ marginRight: 20 }}>\n                            <Input type=\"text\" value={ this.state.nombre } onChange={e => this.setState({ nombre: e.target.value })} />\n                        </Form.Item>\n\n                        <Button onClick={this.handleSave}>Guardar</Button>\n                    </div>\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nexport default Perfil","import React, { Component } from 'react'\nimport { getToken } from './utils/auth';\nimport { Layout, Collapse, Form, Input, Select, Button, Tag, message, Table, Icon, Popconfirm, Modal } from 'antd'\nimport Frame from './Frame';\nimport { connect } from 'react-redux'\nimport request from './utils/request';\nimport { getUserInfo } from './utils/auth';\nimport { fetchGrupos } from './actions'\n\nconst reset = {\n    users: []\n}\n\nclass Grupos extends Component{\n\n    state = {\n        seleccionados: [],\n        nombreNuevoGrupo: \"\",\n        grupoEditar: reset\n    }\n\n    addSeleccionado = (u, esModal) => {\n        if(esModal){\n            const user = this.props.usuarios.find(user => user.username === u)\n            this.setState({\n                grupoEditar: {\n                    ...this.state.grupoEditar,\n                    users: [...this.state.grupoEditar.users, user]\n                }\n            })\n        }\n        else{\n            this.setState({ seleccionados: [...new Set([...this.state.seleccionados, u])]})\n        }\n    }\n\n    removeSeleccionado = (s, esModal) => {\n        if(esModal){\n            this.setState({\n                grupoEditar: {\n                    ...this.state.grupoEditar,\n                    users: this.state.grupoEditar.users.filter(g => g._id !== s._id)\n                }\n            })\n        }\n        else{\n            this.setState({ seleccionados: this.state.seleccionados.filter(sel => s !== sel)})\n        }\n    }\n\n    crearGrupo = () => {\n        if(this.state.nombreNuevoGrupo === \"\"){ message.warning(\"Es necesario introducir un nombre para el grupo\")}\n        else if(this.state.seleccionados.length === 0){ message.warning(\"No se han añadido usuarios al grupo\") }\n        else{\n            const users = this.state.seleccionados.map(sel => this.props.usuarios.find(u => u.username === sel)).map(u => u._id)\n            const equipo = getUserInfo().equipo\n\n            request(\"/grupos\", {\n                method: \"POST\",\n                body: {\n                    nombre: this.state.nombreNuevoGrupo,\n                    users,\n                    equipo\n                }\n            }).then(data => {\n                console.log(data)\n                message.success(\"El grupo se creó correctamente\")\n                this.props.dispatch(fetchGrupos())\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Se produjo un error durante la creación del grupo\")\n            })\n        }\n    }\n    \n    borrarGrupo = grupo => {\n        request(\"/grupos/\" + grupo._id, { method: \"DELETE\" })\n            .then(data => { this.props.dispatch(fetchGrupos()); message.success(\"El grupo se borró correctamente\" ) })\n            .catch(err => { console.log(err); message.error(\"Se produjo un error durante el borrado del grupo\") })\n    }\n\n    editarGrupo = () => {\n        const { nombre, users, _id } = this.state.grupoEditar\n        request(\"/grupos/\" + _id, {\n            method: \"PUT\",\n            body: { nombre, users }\n        }).then(data => { \n            this.props.dispatch(fetchGrupos()); \n            message.success(\"El grupo se editó correctamente\" ); \n            this.setState({ modalEdicion: false, grupoEditar: reset }) \n        }).catch(err => { console.log(err); message.error(\"Se produjo un error durante la edición del grupo\") })\n    }\n\n    render(){\n        const Panel = Collapse.Panel;\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h2>Grupos</h2>\n                    <Table style={{ paddingBottom: 30 }} rowKey=\"_id\" dataSource={this.props.grupos} columns={[\n                        {\n                            title: \"Grupo\",\n                            dataIndex: \"nombre\",\n                            key: \"nombre\"\n                        },\n                        {\n                            title: \"Usuarios\",\n                            dataIndex: \"users\",\n                            render: (us) => us.map(u => <Tag key={\"u\" + u._id}>{u.username}</Tag>)\n                        },\n                        {\n                            render: row => {\n                                return (\n                                    <div style={{ display: \"flex\", margin: 5 }}>\n                                        <Tag color=\"blue\" onClick={() => this.setState({ modalEdicion: true, grupoEditar: row })}><Icon type=\"edit\" /></Tag>\n                                        <Popconfirm\n                                            title={`¿Seguro que deseas borrar el equipo ${row.nombre}?`}\n                                            onConfirm={() => this.borrarGrupo(row)}\n                                            okText=\"Aceptar\"\n                                            cancelText=\"Cancelar\"\n                                        >\n                                            <Tag color=\"volcano\"><Icon type=\"delete\" /></Tag>\n                                        </Popconfirm>\n                                    </div>\n                                )\n                            }\n                        }\n                    ]} />\n                    <Collapse>\n                        <Panel key=\"nuevoGrupo\" header=\"Nuevo grupo de usuarios\">\n                            <Form.Item label=\"Nombre del grupo\">\n                                <Input type=\"text\" value={this.state.nombreNuevoGrupo} onChange={evt => this.setState({ nombreNuevoGrupo: evt.target.value }) }/>\n                            </Form.Item>\n                            <Form.Item label=\"Integrantes\">\n                                <Select style={{ width: \"100%\" }} onChange={evt => this.addSeleccionado(evt, false)}>\n                                    {\n                                        this.props.usuarios.map((u, i) => (\n                                            <Select.Option key={\"user\" + i } value={u.username}>{ u.username }</Select.Option>\n                                        ))\n                                    }\n                                </Select>\n                            </Form.Item>\n                            <div style={{ paddingBottom: 30 }}>\n                                  {\n                                      this.state.seleccionados.map((s, i) => (\n                                          <Tag closable key={s} onClose={() => this.removeSeleccionado(s)}>{s}</Tag>\n                                      ))\n                                  }  \n                            </div>\n                            <Button onClick={this.crearGrupo}>Crear nuevo grupo</Button>\n                        </Panel>\n                    </Collapse>\n                </Frame>\n                <Modal\n                    visible={this.state.modalEdicion}\n                    footer={null}\n                    onCancel={() => this.setState({ modalEdicion: false, grupoEditar: reset })}\n                >\n                    <h3>Editar grupo</h3>\n                    <Form.Item label=\"Nombre del grupo\">\n                        <Input type=\"text\" value={this.state.grupoEditar.nombre} onChange={evt => this.setState({ grupoEditar: {...this.state.grupoEditar, nombre: evt.target.value} }) }/>\n                    </Form.Item>\n                    <Form.Item label=\"Integrantes\">\n                        <Select style={{ width: \"100%\" }} onChange={evt => this.addSeleccionado(evt, true)}>\n                            {\n                                this.props.usuarios.map((u, i) => (\n                                    <Select.Option key={\"user\" + i } value={u.username}>{ u.username }</Select.Option>\n                                ))\n                            }\n                        </Select>\n                    </Form.Item>\n                    <div style={{ paddingBottom: 30 }}>\n                            {\n                                this.state.grupoEditar.users.map((s, i) => (\n                                    <Tag closable key={s._id} onClose={() => this.removeSeleccionado(s, true)}>{s.username}</Tag>\n                                ))\n                            }  \n                    </div>\n                    <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                        <Button style={{ paddingLeft: 20 }} onClick={this.editarGrupo}>Editar Grupo</Button>\n                        <Button type=\"danger\" onClick={() => this.setState({ modalEdicion: false, grupoEditar: reset })}>Cancelar</Button>\n                    </div>\n                </Modal>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    usuarios: state.usuarios,\n    grupos: state.grupos\n})\n\nexport default connect(mapStateToProps)(Grupos)","import React, { Component } from 'react'\nimport { Modal, Form, Tag, Button, Input, Icon, Select, message } from 'antd';\nimport { fetchPws } from '../actions'\nimport PrivateComponent from '../PrivateComponent'\nimport request from '../utils/request'\nimport { connect } from 'react-redux'\n\nclass ModalEditarPws extends Component {\n    state = {\n        editNombre: \"\",\n        editCampos: [{\"\" : \"\"}],\n        editGrupos: [],\n        editUsuarios: []\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if((prevProps.pwSelect !== this.props.pwSelect) && this.props.pwSelect){\n            console.log(this.props.pwSelect)\n            this.setState({\n                editNombre: this.props.pwSelect.nombre,\n                editCampos: Object.keys(this.props.pwSelect.datos).map((k, i) => ({[k]: this.props.pwSelect.datos[k]})),\n                editGrupos: this.props.pwSelect.grupos.map(g => g.nombre),\n                editUsuarios: this.props.pwSelect.users.map(u => u.username)\n            })\n        }\n    }\n\n    handleRepeater = (txt, i, cual) => {\n        const campoEdit = this.state.editCampos[i]\n        const prevKey = Object.keys(campoEdit)[0]\n        const prevValue = Object.values(campoEdit)[0]\n\n        if(cual === \"key\"){\n            campoEdit[txt] = prevValue\n            delete campoEdit[prevKey]\n        }\n        else if(cual === \"value\"){\n            campoEdit[Object.keys(campoEdit)[0]] = txt\n        }\n\n        const editCampos = this.state.editCampos.map((c, j) => {\n            if(i === j){ return campoEdit }\n            else{ return c }\n        })\n\n        this.setState({ editCampos })\n    }\n\n    editarEntrada = () => {\n\n        const users = this.state.editUsuarios.map(eu => this.props.usuarios.find(u => u.username === eu)._id)\n        const grupos = this.state.editGrupos.map(eg => this.props.grupos.find(g => g.nombre === eg)._id)\n        const datos = this.state.editCampos.reduce((a, b) => ({...a, ...b}), {})\n\n        if(this.state.editCampos.length > Object.keys(datos).length ){\n            message.warning(\"No puede haber dos campos con el mismo identificador\")\n        }\n        else{\n            if( grupos.length === 0 && users.length === 0){\n                message.info(\"La entrada no ha sido asignada a nadie, estará solo disponible para administradores\")\n            }\n            request(\"/pws/\" + this.props.pwSelect._id, {\n                method: \"PUT\",\n                body: {\n                    nombre: this.state.editNombre,\n                    datos,\n                    users,\n                    grupos\n                }\n            }).then(data => {\n                message.success(\"La entrada se editó correctamente\")\n                this.props.dispatch(fetchPws())\n                this.setState({        \n                    editNombre: \"\",\n                    editCampos: [{\"\" : \"\"}],\n                    editGrupos: [],\n                    editUsuarios: []\n                })\n                this.props.cb()\n            }).catch(err => { \n                console.log(err); \n                message.error(\"Ocurrió un error durante la edición de la entrada\")\n            })\n        }\n    }\n\n    render(){\n        const Item = Form.Item;\n        const Option = Select.Option;\n        return (\n            <Modal\n                visible={this.props.visible}\n                footer={null}\n                onCancel={this.props.cb}\n                width=\"80vw\"\n            >\n                <h2>{ this.props.pwSelect.nombre }</h2>\n                <div>\n                    <Item label=\"Nombre de la entrada\">\n                        <Input type=\"text\" value={ this.state.editNombre } onChange={evt => this.setState({ editNombre: evt.target.value })} />\n                    </Item>\n                    <Item label=\"Campos\">\n                        {\n                            this.state.editCampos.map((c, i) => {\n                                return (\n                                    <div key={\"campo\" + i} style={{ display: \"flex\" }}>\n                                        <Item label=\"Identificador\" style={{ flex: 1, paddingRight: \"1em\" }}>\n                                            <Input type=\"text\" value={ Object.keys(c)[0] } onChange={evt => this.handleRepeater(evt.target.value, i, \"key\")} />\n                                        </Item>\n                                        <Item label=\"Valor\" style={{ flex: 1, paddingRight: \"1em\" }}>\n                                            <Input type=\"text\" value={ Object.values(c)[0] } onChange={evt => this.handleRepeater(evt.target.value, i, \"value\")} />\n                                        </Item>\n                                        { this.state.editCampos.length > 1 &&\n                                            <Item label=\" \" colon={false}>\n                                                <Tag color=\"volcano\" onClick={() => this.setState({ editCampos: this.state.editCampos.filter((e, it) => it !== i)})}>\n                                                    <Icon type=\"delete\" />\n                                                </Tag>\n                                            </Item>\n                                        }\n                                    </div>\n                                )\n                            })\n                        }\n                        <Tag onClick={() => this.setState({ editCampos: [...this.state.editCampos, {\"\" : \"\"}]})}><Icon type=\"plus\" /> Nuevo campo</Tag>\n                    </Item>\n                    <PrivateComponent blue={this.props.blue}>\n                        <Item label=\"Asignar a grupos\">\n                            <Select style={{ width: \"100%\" }} onChange={evt => this.setState({ editGrupos: [...new Set([...this.state.editGrupos, evt])]})}>\n                                {\n                                    this.props.grupos.map((g, i) => (\n                                        <Option key={\"grupo\" + i } value={g.nombre}>{ g.nombre }</Option>\n                                    ))\n                                }\n                            </Select>\n                            <div style={{ paddingBottom: 30 }}>\n                                {\n                                    this.state.editGrupos.map((g, i) => (\n                                        <Tag closable key={\"gtag\" + g} onClose={() => this.setState({ editGrupos: this.state.editGrupos.filter(h => h !== g) })}>{g}</Tag>\n                                    ))\n                                }  \n                            </div>\n                        </Item>\n                        <Item label=\"Asignar a usuarios\">\n                            <Select style={{ width: \"100%\" }} onChange={evt => this.setState({ editUsuarios: [...new Set([...this.state.editUsuarios, evt])]})}>\n                                {\n                                    this.props.usuarios.map((u, i) => (\n                                        <Option key={\"user\" + i } value={u.username}>{ u.username }</Option>\n                                    ))\n                                }\n                            </Select>\n                            <div style={{ paddingBottom: 30 }}>\n                                {\n                                    this.state.editUsuarios.map((u, i) => (\n                                        <Tag closable key={\"utag\" + u} onClose={() => this.setState({ editUsuarios: this.state.editUsuarios.filter(v => v !== u) })}>{u}</Tag>\n                                    ))\n                                }  \n                            </div>\n                        </Item>\n                    </PrivateComponent>\n                    <Button onClick={this.editarEntrada}>Editar entrada</Button>\n                </div>\n            </Modal>\n        )\n    }\n}\n\nexport default connect()(ModalEditarPws)\n","import React, { Component } from 'react'\nimport { Layout, Collapse, Form, Input, Tag, Icon, Select, Button, message, Table, Popconfirm, Modal } from 'antd'\nimport Frame from './Frame';\nimport ModalEditarPws from './components/ModalEditarPws'\nimport { getToken, getUserInfo } from './utils/auth'\nimport { connect } from 'react-redux'\nimport request from './utils/request';\nimport { fetchPws } from './actions';\nimport PrivateComponent from './PrivateComponent';\n\nclass Passwords extends Component{\n    \n    state = {\n        nuevaNombre: \"\",\n        nuevaCampos: [{\"username\" : \"\"}, {\"password\": \"\"}],\n        nuevaGrupos: [],\n        nuevaUsuarios: [],\n        modalPw: false,\n        pwSelect: {\n            datos: {}\n        }\n    }\n\n    txtRefs = []\n\n    componentDidMount(){\n        if(this.props.pws.length > 0 && this.props.auth){\n            this.setState({ pws: this.filtraPw() })\n        }\n    }\n    componentDidUpdate(prevProps){\n        if((prevProps.pws !== this.props.pws || this.props.blueCollar !== prevProps.blueCollar) && this.props.auth){\n            this.setState({ pws: this.filtraPw() })\n        }\n    }\n\n    filtraPw = () => {\n        const pwFiltradas = this.props.pws.filter(pw => {\n            const arrayGruposPw = pw.grupos.map(g => g._id)\n            const arrayGruposUser = this.props.auth.grupos.map(g => g._id)\n            const esGrupo = arrayGruposPw.filter(gp => arrayGruposUser.includes(gp)).length > 0\n            const esUsuario = pw.users.map(u => u._id).includes(this.props.auth._id)\n            const esManager = this.props.auth.manager && !this.props.blueCollar\n            return esGrupo || esUsuario || esManager\n        })\n        return pwFiltradas\n    }\n\n    handleRepeater = (txt, i, cual) => {\n        const campoEdit = this.state.nuevaCampos[i]\n        const prevKey = Object.keys(campoEdit)[0]\n        const prevValue = Object.values(campoEdit)[0]\n\n        if(cual === \"key\"){\n            campoEdit[txt] = prevValue\n            delete campoEdit[prevKey]\n        }\n        else if(cual === \"value\"){\n            campoEdit[Object.keys(campoEdit)[0]] = txt\n        }\n\n        const nuevaCampos = this.state.nuevaCampos.map((c, j) => {\n            if(i === j){ return campoEdit }\n            else{ return c }\n        })\n\n        this.setState({ nuevaCampos })\n    }\n\n    nuevaEntrada = () => {\n\n        const users = this.state.nuevaUsuarios.map(nu => this.props.usuarios.find(u => u.username === nu)._id)\n        const grupos = this.state.nuevaGrupos.map(ng => this.props.grupos.find(g => g.nombre === ng)._id)\n        const datos = this.state.nuevaCampos.reduce((a, b) => ({...a, ...b}), {})\n\n        if(this.state.nuevaCampos.length > Object.keys(datos).length ){\n            message.warning(\"No puede haber dos campos con el mismo identificador\")\n        }\n        else{\n            if( grupos.length === 0 && users.length === 0){\n                message.info(\"La contraseña no ha sido asignada a nadie, estará solo disponible para administradores\")\n            }\n            request(\"/pws\", {\n                method: \"POST\",\n                body: {\n                    nombre: this.state.nuevaNombre,\n                    datos,\n                    users,\n                    grupos,\n                    equipo: getUserInfo().equipo\n                }\n            }).then(data => {\n                message.success(\"La entrada se guardó correctamente\")\n                this.props.dispatch(fetchPws())\n                this.setState({        \n                    nuevaNombre: \"\",\n                    nuevaCampos: [{\"username\" : \"\"}, {\"password\": \"\"}],\n                    nuevaGrupos: [],\n                    nuevaUsuarios: []\n                })\n            }).catch(err => { \n                console.log(err); \n                message.error(\"Ocurrió un error durante el guardado de la entrada\")\n            })\n        }\n    }\n\n    borrarEntrada = pw => {\n        console.log(pw)\n        request(\"/pws/\" + pw._id, { method: \"DELETE\" })\n            .then(data => {\n                message.success(\"La entrada se eliminó correctamente\")\n                this.props.dispatch(fetchPws())\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Se produjo un error durante el borrado de la entrada\")\n            })\n    }\n\n    render(){\n        const Panel = Collapse.Panel;\n        const Item = Form.Item;\n        const Option = Select.Option;\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h2>Contraseñas</h2>\n                    <Table style={{ paddingBottom: 30 }} rowKey=\"_id\" dataSource={this.state.pws} columns={[\n                        {\n                            title: \"Entrada\",\n                            dataIndex: \"nombre\",\n                            key: \"nombre\"\n                        },\n                        {\n                            title: \"Asignada a\",\n                            render: row => {\n                                console.log(row)\n                                return [...row.grupos, ...row.users].map(e => <Tag style={{ margin: \"2px\" }}>{e.username ? e.username : e.nombre}</Tag>)\n                            }\n                        },\n                        {\n                            title: \"\",\n                            key: \"btnConsulta\",\n                            render: pwSelect => (\n                                <div style={{ display: \"flex\", justifyContent: \"flex-end\"}}>\n                                    <div style={{ display: \"flex\" }}>\n                                        <PrivateComponent blue={this.props.blueCollar}>\n                                            <Popconfirm title=\"Se borrará la entrada. ¿Quieres continuar?\"\n                                                onConfirm={() => this.borrarEntrada(pwSelect)}\n                                                okText=\"Aceptar\"\n                                                cancelText=\"Cancelar\"\n                                            >\n                                                <Tag color=\"volcano\" onClick={() => this.setState({ pwSelect })}><Icon type=\"delete\" /> Eliminar</Tag>\n                                            </Popconfirm>\n                                        </PrivateComponent>\n                                        <Tag color=\"gold\" onClick={() => this.setState({ modalEditarPws: true, pwSelect })}><Icon type=\"edit\" /> Editar</Tag>\n                                    </div>\n                                    <Tag color=\"blue\" onClick={() => this.setState({ modalPw: true, pwSelect })}><Icon type=\"search\" /> Consultar</Tag>\n                                </div>\n                            )\n                        }\n                    ]} />\n\n                    <Collapse>\n                        <Panel key=\"nueva\" header=\"Nueva entrada\">\n                            <Item label=\"Nombre de la entrada\">\n                                <Input type=\"text\" value={ this.state.nuevaNombre } onChange={evt => this.setState({ nuevaNombre: evt.target.value })} />\n                            </Item>\n                            <Item label=\"Campos\">\n                                {\n                                    this.state.nuevaCampos.map((c, i) => {\n                                        return (\n                                            <div key={\"campo\" + i} style={{ display: \"flex\" }}>\n                                                <Item label=\"Identificador\" style={{ flex: 1, paddingRight: \"1em\" }}>\n                                                    <Input type=\"text\" value={ Object.keys(c)[0] } onChange={evt => this.handleRepeater(evt.target.value, i, \"key\")} />\n                                                </Item>\n                                                <Item label=\"Valor\" style={{ flex: 1, paddingRight: \"1em\" }}>\n                                                    <Input type=\"text\" value={ Object.values(c)[0] } onChange={evt => this.handleRepeater(evt.target.value, i, \"value\")} />\n                                                </Item>\n                                                { this.state.nuevaCampos.length > 1 &&\n                                                    <Item label=\" \" colon={false}>\n                                                        <Tag color=\"volcano\" onClick={() => this.setState({ nuevaCampos: this.state.nuevaCampos.filter((e, it) => it !== i)})}>\n                                                            <Icon type=\"delete\" />\n                                                        </Tag>\n                                                    </Item>\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                                <Tag onClick={() => this.setState({ nuevaCampos: [...this.state.nuevaCampos, {\"\" : \"\"}]})}><Icon type=\"plus\" /> Nuevo campo</Tag>\n                            </Item>\n                                <Item label=\"Asignar a grupos\">\n                                    <Select style={{ width: \"100%\" }} onChange={evt => this.setState({ nuevaGrupos: [...new Set([...this.state.nuevaGrupos, evt])]})}>\n                                        {\n                                            this.props.grupos.map((g, i) => (\n                                                <Option key={\"grupo\" + i } value={g.nombre}>{ g.nombre }</Option>\n                                            ))\n                                        }\n                                    </Select>\n                                    <div style={{ paddingBottom: 30 }}>\n                                        {\n                                            this.state.nuevaGrupos.map((g, i) => (\n                                                <Tag closable key={\"gtag\" + g} onClose={() => this.setState({ nuevaGrupos: this.state.nuevaGrupos.filter(h => h !== g) })}>{g}</Tag>\n                                            ))\n                                        }  \n                                    </div>\n                                </Item>\n                                <Item label=\"Asignar a usuarios\">\n                                    <Select style={{ width: \"100%\" }} onChange={evt => this.setState({ nuevaUsuarios: [...new Set([...this.state.nuevaUsuarios, evt])]})}>\n                                        {\n                                            this.props.usuarios.map((u, i) => (\n                                                <Option key={\"user\" + i } value={u.username}>{ u.username }</Option>\n                                            ))\n                                        }\n                                    </Select>\n                                    <div style={{ paddingBottom: 30 }}>\n                                        {\n                                            this.state.nuevaUsuarios.map((u, i) => (\n                                                <Tag closable key={\"utag\" + u} onClose={() => this.setState({ nuevaUsuarios: this.state.nuevaUsuarios.filter(v => v !== u) })}>{u}</Tag>\n                                            ))\n                                        }  \n                                    </div>\n                                </Item>\n                            <Button onClick={this.nuevaEntrada}>Guardar entrada</Button>\n                        </Panel>\n                    </Collapse>\n                </Frame>\n                <Modal\n                    visible={this.state.modalPw}\n                    footer={null}\n                    onCancel={() => this.setState({ modalPw: false })}\n                >\n                    <h2>{ this.state.pwSelect.nombre }</h2>\n                    <Table \n                        showHeader={false} \n                        pagination={false} \n                        size=\"small\" \n                        rowKey=\"zzzzz\"\n                        dataSource={Object.keys(this.state.pwSelect.datos).map((k, i) => ({[k]: this.state.pwSelect.datos[k], zzzzz: i}))} \n                        columns={[\n                            {\n                                title: \"Identificador\",\n                                key: row => Object.keys(row)[0],\n                                render: row => Object.keys(row)[0]\n                            },\n                            {\n                                title: \"Valor\",\n                                render: row => Object.values(row)[0]\n                            },\n                            {\n                                title: \"\",\n                                render: row => <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}><Button onClick={() => { \n                                    navigator.clipboard.writeText(Object.values(row)[0]) \n                                    message.info(\"Se ha copiado la clave en el portapapeles\")\n                                }}>Copiar</Button></div>\n                            }\n                        ]}\n                    />\n                </Modal>\n                <ModalEditarPws\n                    visible={this.state.modalEditarPws}\n                    cb={() => this.setState({ modalEditarPws: false })}\n                    pwSelect={this.state.pwSelect}\n                    grupos={this.props.grupos}\n                    usuarios={this.props.usuarios}\n                    blue={this.props.blueCollar}\n                />\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    grupos: state.grupos,\n    usuarios: state.usuarios,\n    pws: state.pws,\n    auth: state.auth,\n    blueCollar: state.blueCollar\n})\n\nexport default connect(mapStateToProps)(Passwords)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Table, Tag, Popconfirm, Icon, Form, DatePicker, Input, Button, message } from 'antd'\nimport moment from 'moment'\nimport request from '../utils/request';\nimport { getUserInfo } from '../utils/auth'\nimport { fetchCalendario } from '../actions'\n\nclass ModuloFestivos extends Component{\n\n    state = {}\n\n    addFestivo = () => {\n        if(!this.state.nombre){ message.warning(\"No se ha asignado nombre al festivo\") }\n        else if(!this.state.fecha){ message.warning(\"No se ha seleccionado ninguna fecha\") }\n        else{\n            request(\"/dias\", {\n                method: \"POST\",\n                body: {\n                    fecha: moment.utc(this.state.fecha).format(),\n                    tipo: \"festivo\",\n                    nombre: this.state.nombre,\n                    equipo: getUserInfo().equipo,\n                    aprobado: true\n                }\n            }).then(data => {\n                //console.log(data)\n                message.success(\"El nuevo festivo se ha añadido correctamente\")\n                this.props.dispatch(fetchCalendario())\n                this.setState({ nombre: undefined, fecha: undefined })\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Se ha producido un error durante la creación del nuevo festivo\")\n            })\n        }\n    }\n\n    borrarFestivo = dia => {\n        request(\"/dias/\" + dia._id, { method: \"DELETE\" })\n            .then(data => {\n                //console.log(data)\n                message.success(\"Se ha borrado el festivo correctamente\")\n                this.props.dispatch(fetchCalendario())\n            }).catch(err => {\n                console.log(err)\n                message.error(\"Ha ocurrido un error durante el borrado del festivo\")\n            })\n    }\n\n    render(){\n        return(\n            <div>\n                <h3>Lista de festivos</h3>\n                <Table dataSource={this.props.dias.filter(d => d.tipo === \"festivo\")} rowKey=\"_id\" columns={[\n                    {\n                        title: 'Nombre',\n                        dataIndex: 'nombre',\n                        key: 'nombre',\n                    }, {\n                        title: 'Día',\n                        key: 'fecha',\n                        render: dia => moment(dia.fecha).format(\"YYYY-MM-DD\")\n                    }, {\n                        key: \"botones\",\n                        render: dia => (\n                            <div key={dia._id} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                                <Popconfirm \n                                    title={`¿Estás seguro de que quieres borrar el día festivo?`} \n                                    onConfirm={() => this.borrarFestivo(dia)}\n                                    icon={<Icon type=\"warning\" style={{ color: 'red' }} />}\n                                >\n                                    <Tag color=\"volcano\" key={`${dia._id}_dia`}><Icon type=\"delete\" /> Borrar</Tag>\n                                </Popconfirm>\n                            </div>\n                        )\n                    }\n                ]}/>\n\n                <h3 style={{ marginTOp: 20 }}>Añadir festivo</h3>\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                    <Form.Item label=\"Nombre\" style={{ marginRight: 20 }}>\n                        <Input type=\"text\" onChange={e => this.setState({ nombre: e.target.value })} />\n                    </Form.Item>\n                    <Form.Item label=\"Fecha\" style={{ marginRight: 20 }}>\n                        <DatePicker onChange={fecha => this.setState({ fecha })} style={{ width: 250 }} />\n                    </Form.Item>\n                    <Form.Item label=\" \" colon={false}>\n                        <Button onClick={this.addFestivo}>Añadir</Button>                \n                    </Form.Item>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dias: state.dias\n    }\n}\n\nexport default connect(mapStateToProps)(ModuloFestivos)","import React, { Component } from 'react'\nimport { getToken } from './utils/auth';\nimport { Layout, Collapse } from 'antd'\nimport Frame from './Frame';\nimport ModuloFestivos from './modulosConfig/ModuloFestivos';\nimport ModuloRegistros from './modulosConfig/ModuloRegistros';\n\n\nclass Configuracion extends Component{\n\n    state = {}\n\n    render(){\n        const Panel = Collapse.Panel;\n        return(\n            <Layout style={{height:\"100vh\"}}>\n                <Frame isLogged={ getToken() ? true : false }>\n                    <h1>Configuración</h1>\n                    <Collapse>\n                        <Panel header=\"Añadir registros\">\n                            <ModuloRegistros />\n                        </Panel>\n                    </Collapse>\n                    <Collapse>\n                        <Panel header=\"Gestionar festivos\">\n                            <ModuloFestivos />\n                        </Panel>\n                    </Collapse>\n                </Frame>\n            </Layout>\n        )\n    }\n}\n\nexport default Configuracion","import { combineReducers } from 'redux'\nimport usuarios from './usuarios'\nimport dias from './dias'\nimport es from './es'\nimport documentos from './documentos'\nimport blueCollar from './blueCollar'\nimport grupos from './grupos'\nimport pws from './pws'\nimport auth from './auth'\n\nconst rootReducer = combineReducers({\n    usuarios,\n    dias,\n    es,\n    documentos,\n    blueCollar,\n    grupos, \n    pws,\n    auth\n})\n\nexport default rootReducer;","import { \n    CARGAR_USUARIOS\n} from \"../constants/action-types\";\n\nexport default function usuariosReducer(state = [], action) {\n    switch (action.type) {\n        case CARGAR_USUARIOS:\n            console.log(action)\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { \n    CARGAR_CALENDARIO\n} from \"../constants/action-types\";\n\nexport default function diasReducer(state = [], action) {\n    switch (action.type) {\n        case CARGAR_CALENDARIO:\n            console.log(action)\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { \n    CARGAR_ES\n} from \"../constants/action-types\";\n\nexport default function esReducer(state = [], action) {\n    switch (action.type) {\n        case CARGAR_ES:\n            console.log(action)\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { \n    CARGAR_DOCUMENTOS\n} from \"../constants/action-types\";\n\nexport default function documentosReducer(state = [], action) {\n    switch (action.type) {\n        case CARGAR_DOCUMENTOS:\n            console.log(action)\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { \n    CAMBIAR_BLUE_COLLAR\n} from \"../constants/action-types\";\n\nexport default function blueCollarReducer(state = false, action) {\n    switch (action.type) {\n        case CAMBIAR_BLUE_COLLAR:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { \n    CARGAR_GRUPOS\n} from \"../constants/action-types\";\n\nexport default function gruposReducer(state = [], action) {\n    switch (action.type) {\n        case CARGAR_GRUPOS:\n            console.log(action)\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { \n    CARGAR_PWS\n} from \"../constants/action-types\";\n\nexport default function pwsReducer(state = [], action) {\n    switch (action.type) {\n        case CARGAR_PWS:\n            console.log(action)\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { \n    CARGAR_AUTH\n} from \"../constants/action-types\";\n\nexport default function authReducer(state = {}, action) {\n    switch (action.type) {\n        case CARGAR_AUTH:\n            console.log(action)\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from '../reducers/index'\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n    rootReducer,\n    {},\n    applyMiddleware(thunk)\n)\n\nexport default store","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\"\nimport Register from \"./Register\"\nimport FourOhFour from \"./FourOhFour\"\nimport 'antd/dist/antd.css';\nimport { LocaleProvider } from 'antd';\nimport es_ES from 'antd/lib/locale-provider/es_ES';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { SocketProvider } from 'socket.io-react';\nimport io from 'socket.io-client';\nimport { PrivateRoute } from './PrivateRoute';\nimport Home from \"./Home\"\nimport Calendario from \"./Calendario\"\nimport NuevoUsuario from './NuevoUsuario';\nimport Documentos from './Documentos';\nimport Usuarios from './Usuarios';\nimport EditUsuario from './EditUsuario';\nimport Analitica from './Analitica';\nimport Registro from './Registro';\nimport Perfil from './Perfil';\nimport Grupos from './Grupos';\nimport Passwords from './Passwords';\nimport Configuracion from './Configuracion';\nimport { Provider } from 'react-redux';\nimport { getUserInfo } from './utils/auth'\nimport store from './store';\nimport { fetchCalendario, fetchUsuarios, fetchES, fetchDocumentos, fetchGrupos, fetchPws, fetchAuth } from './actions'\n\nmoment.locale('es');\n\nconst socket = io.connect(process.env.REACT_APP_API_URL, {\n  transports: [ 'websocket' ]\n});\n\nclass App extends Component {\n  componentDidMount(){\n    const userInfo = getUserInfo()\n    if( userInfo && userInfo.equipo ){\n      store.dispatch(fetchAuth())\n      store.dispatch(fetchUsuarios())\n      store.dispatch(fetchCalendario())\n      store.dispatch(fetchES())\n      store.dispatch(fetchDocumentos())\n      store.dispatch(fetchGrupos())\n      store.dispatch(fetchPws())\n    }\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <LocaleProvider locale={es_ES}>\n          <SocketProvider socket={socket}>\n            <BrowserRouter>\n              <Switch>\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/register\" component={Register} />\n                <PrivateRoute exact path=\"/calendario\" component={Calendario} />\n                <PrivateRoute exact path=\"/archivos\" component={Documentos} />\n                <PrivateRoute exact path=\"/perfil\" component={Perfil} />\n                <PrivateRoute exact path=\"/usuarios\" component={Usuarios} />\n                <PrivateRoute exact path=\"/passwords\" component={Passwords} />\n                <PrivateRoute onlyManager={true} exact path=\"/analitica\" component={Analitica} />\n                <PrivateRoute onlyManager={true} exact path=\"/grupos\" component={Grupos} />\n                <PrivateRoute onlyManager={true} exact path=\"/configuracion\" component={Configuracion} />\n                <PrivateRoute exact path=\"/usuario/:id\" component={EditUsuario} />\n                <PrivateRoute exact path=\"/registro\" component={Registro} />\n                <PrivateRoute exact path=\"/nuevousuario\" component={NuevoUsuario} />\n                <PrivateRoute exact path=\"/\" component={Home} />\n                <Route path=\"\" component={FourOhFour} />\n              </Switch>\n            </BrowserRouter>\n          </SocketProvider>\n        </LocaleProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}